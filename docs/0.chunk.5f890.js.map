{"version":3,"sources":["webpack:///0.chunk.5f890.js","webpack:///../node_modules/marked/lib/marked.js","webpack:///../node_modules/yaml/lib/yaml.js","webpack:///../node_modules/preact-markup/dist/preact-markup.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///./routes/article.js","webpack:///./lib/markdown.js"],"names":["webpackJsonp","3F7m","module","exports","__webpack_require__","global","Lexer","options","this","tokens","links","marked","defaults","rules","block","normal","gfm","tables","InlineLexer","inline","renderer","Renderer","Error","breaks","pedantic","Parser","token","escape","html","encode","replace","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","regex","opt","source","self","name","val","RegExp","noop","merge","obj","target","key","i","arguments","length","Object","prototype","hasOwnProperty","call","src","callback","pending","highlight","lex","e","done","err","out","parse","type","text","lang","code","escaped","message","silent","newline","fences","hr","heading","nptable","lheading","blockquote","list","def","table","paragraph","bullet","item","_tag","top","bq","next","loose","cap","bull","b","space","l","exec","push","depth","header","split","align","cells","test","ordered","match","indexOf","smartLists","slice","join","sanitize","pre","sanitizer","href","title","charCodeAt","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","Math","random","toString","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","parser","lexer","inlineLexer","window","Ipsp","context","str","version","tokenize","captures","ignore","input","indents","lastIndents","stack","indentAmount","len","SyntaxError","advance","shift","advanceValue","accept","peekType","expect","msg","ignoreSpace","ignoreWhitespace","parseDoc","parseList","parseInlineHash","parseInlineList","parseHash","parseTimestamp","parseFloat","id","hash","date","Date","year","month","day","hour","min","sec","setUTCFullYear","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","eval","f1ur","factory","preact","parseMarkup","markup","doc","mime","parserError","wrappedMarkup","DOMParser","parseFromString","parserDoc","buildParserFrame","open","write","close","getElementsByTagName","fc","firstChild","error","nodeName","removeChild","lastChild","textContent","nodeValue","document","implementation","createHTMLDocument","frame","createElement","style","cssText","setAttribute","appendChild","contentWindow","toVdom","node","visitor","h","walk","EMPTY_OBJ$1","index","arr","nodeType","trim","isFirstOrLast","allowScripts","getProps","attributes","walkChildren","childNodes","attrs","props","_attrs$i","value","allowEvents","Function","children","c","Array","map","filter","exists","markupToVdom","reviver","dom","EMPTY_OBJ","vdom","toCamelCase","letter","toUpperCase","keys","reduce","attrName","x","inherits","subClass","superClass","TypeError","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","objectWithoutProperties","possibleConstructorReturn","ReferenceError","customReviver","_Component","Markup","apply","setReviver","shouldComponentUpdate","_ref","wrap","p","setComponents","components","render","_ref2","_ref2$wrap","undefined","onError","console","cl","splice","Component","h6ac","g","iec2","__webpack_exports__","_possibleConstructorReturn","_inherits","parseContent","FRONT_MATTER_REG","frontMatter","meta","yaml_default","a","defineProperty","preact_min","yaml","marked_default","preact_markup","preact_markup_default","CACHE","OPTIONS","markdown_markdownToHtml","md","lib_markdown","markdown","config","config_default","d","article_Article","Article","componentWillMount","_this2","article","articles","find","fetch","then","r","setState","_ref3","class","data","toDateString"],"mappings":"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","file":"0.chunk.5f890.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"3F7m\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function () {\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: noop,\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n    nptable: noop,\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n    blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n    table: noop,\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n    text: /^[^\\n]+/\n  };\n\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\n  block.item = replace(block.item, 'gm')(/bull/g, block.bullet)();\n\n  block.list = replace(block.list)(/bull/g, block.bullet)('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')('def', '\\\\n+(?=' + block.def.source + ')')();\n\n  block.blockquote = replace(block.blockquote)('def', block.def)();\n\n  block._tag = '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code' + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo' + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\n  block.html = replace(block.html)('comment', /<!--[\\s\\S]*?-->/)('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)(/tag/g, block._tag)();\n\n  block.paragraph = replace(block.paragraph)('hr', block.hr)('heading', block.heading)('lheading', block.lheading)('blockquote', block.blockquote)('tag', '<' + block._tag)('def', block.def)();\n\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n    paragraph: /^/,\n    heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n  });\n\n  block.gfm.paragraph = replace(block.paragraph)('(?!', '(?!' + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|' + block.list.source.replace('\\\\1', '\\\\3') + '|')();\n\n  /**\n   * GFM + Tables Block Grammar\n   */\n\n  block.tables = merge({}, block.gfm, {\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n  });\n\n  /**\n   * Block Lexer\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = {};\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n\n    if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = block.tables;\n      } else {\n        this.rules = block.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n\n  Lexer.rules = block;\n\n  /**\n   * Static Lex Method\n   */\n\n  Lexer.lex = function (src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n\n  Lexer.prototype.lex = function (src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n\n  Lexer.prototype.token = function (src, top, bq) {\n    var src = src.replace(/^ +$/gm, ''),\n        next,\n        loose,\n        cap,\n        bull,\n        b,\n        item,\n        space,\n        i,\n        l;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          text: !this.options.pedantic ? cap.replace(/\\n+$/, '') : cap\n        });\n        continue;\n      }\n\n      // fences (gfm)\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (top && (cap = this.rules.nptable.exec(src))) {\n        src = src.substring(cap[0].length);\n\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2] === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top, true);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n\n        this.tokens.push({\n          type: 'list_start',\n          ordered: bull.length > 1\n        });\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (this.options.smartLists && i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          this.tokens.push({\n            type: loose ? 'loose_item_start' : 'list_item_start'\n          });\n\n          // Recurse.\n          this.token(item, false, bq);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (!bq && top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.links[cap[1].toLowerCase()] = {\n          href: cap[2],\n          title: cap[3]\n        };\n        continue;\n      }\n\n      // table (gfm)\n      if (top && (cap = this.rules.table.exec(src))) {\n        src = src.substring(cap[0].length);\n\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].replace(/^ *\\| *| *\\| *$/g, '').split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n    url: noop,\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n    link: /^!?\\[(inside)\\]\\(href\\)/,\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n    em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n    br: /^ {2,}\\n(?!\\s*$)/,\n    del: noop,\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n  };\n\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\n  inline.link = replace(inline.link)('inside', inline._inside)('href', inline._href)();\n\n  inline.reflink = replace(inline.reflink)('inside', inline._inside)();\n\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n  });\n\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: replace(inline.escape)('])', '~|])')(),\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n    text: replace(inline.text)(']|', '~]|')('|', '|https?://|')()\n  });\n\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: replace(inline.br)('{2,}', '*')(),\n    text: replace(inline.gfm.text)('{2,}', '*')()\n  });\n\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer();\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    } else if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n\n  InlineLexer.rules = inline;\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n\n  InlineLexer.output = function (src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n\n  /**\n   * Lexing/Compiling\n   */\n\n  InlineLexer.prototype.output = function (src) {\n    var out = '',\n        link,\n        text,\n        href,\n        cap;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += cap[1];\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = cap[1].charAt(6) === ':' ? this.mangle(cap[1].substring(7)) : this.mangle(cap[1]);\n          href = this.mangle('mailto:') + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        src = src.substring(cap[0].length);\n        text = escape(cap[1]);\n        href = text;\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        out += this.outputLink(cap, {\n          href: cap[2],\n          title: cap[3]\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2], true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  };\n\n  /**\n   * Compile Link\n   */\n\n  InlineLexer.prototype.outputLink = function (cap, link) {\n    var href = escape(link.href),\n        title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n  };\n\n  /**\n   * Smartypants Transformations\n   */\n\n  InlineLexer.prototype.smartypants = function (text) {\n    if (!this.options.smartypants) return text;\n    return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201C')\n    // closing doubles\n    .replace(/\"/g, '\\u201D')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n  };\n\n  /**\n   * Mangle Links\n   */\n\n  InlineLexer.prototype.mangle = function (text) {\n    if (!this.options.mangle) return text;\n    var out = '',\n        l = text.length,\n        i = 0,\n        ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  };\n\n  /**\n   * Renderer\n   */\n\n  function Renderer(options) {\n    this.options = options || {};\n  }\n\n  Renderer.prototype.code = function (code, lang, escaped) {\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>' + (escaped ? code : escape(code, true)) + '\\n</code></pre>';\n    }\n\n    return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? code : escape(code, true)) + '\\n</code></pre>\\n';\n  };\n\n  Renderer.prototype.blockquote = function (quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  Renderer.prototype.html = function (html) {\n    return html;\n  };\n\n  Renderer.prototype.heading = function (text, level, raw) {\n    return '<h' + level + ' id=\"' + this.options.headerPrefix + raw.toLowerCase().replace(/[^\\w]+/g, '-') + '\">' + text + '</h' + level + '>\\n';\n  };\n\n  Renderer.prototype.hr = function () {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  Renderer.prototype.list = function (body, ordered) {\n    var type = ordered ? 'ol' : 'ul';\n    return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  Renderer.prototype.listitem = function (text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  Renderer.prototype.paragraph = function (text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  Renderer.prototype.table = function (header, body) {\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + '<tbody>\\n' + body + '</tbody>\\n' + '</table>\\n';\n  };\n\n  Renderer.prototype.tablerow = function (content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  Renderer.prototype.tablecell = function (content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align ? '<' + type + ' style=\"text-align:' + flags.align + '\">' : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  Renderer.prototype.strong = function (text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  Renderer.prototype.em = function (text) {\n    return '<em>' + text + '</em>';\n  };\n\n  Renderer.prototype.codespan = function (text) {\n    return '<code>' + text + '</code>';\n  };\n\n  Renderer.prototype.br = function () {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  Renderer.prototype.del = function (text) {\n    return '<del>' + text + '</del>';\n  };\n\n  Renderer.prototype.link = function (href, title, text) {\n    if (this.options.sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n      } catch (e) {\n        return '';\n      }\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n        return '';\n      }\n    }\n    var out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  Renderer.prototype.image = function (href, title, text) {\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  Renderer.prototype.text = function (text) {\n    return text;\n  };\n\n  /**\n   * Parsing & Compiling\n   */\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n  }\n\n  /**\n   * Static Parse Method\n   */\n\n  Parser.parse = function (src, options, renderer) {\n    var parser = new Parser(options, renderer);\n    return parser.parse(src);\n  };\n\n  /**\n   * Parse Loop\n   */\n\n  Parser.prototype.parse = function (src) {\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\n    this.tokens = src.reverse();\n\n    var out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n\n  Parser.prototype.next = function () {\n    return this.token = this.tokens.pop();\n  };\n\n  /**\n   * Preview Next Token\n   */\n\n  Parser.prototype.peek = function () {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n\n  Parser.prototype.parseText = function () {\n    var body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n\n  Parser.prototype.tok = function () {\n    switch (this.token.type) {\n      case 'space':\n        {\n          return '';\n        }\n      case 'hr':\n        {\n          return this.renderer.hr();\n        }\n      case 'heading':\n        {\n          return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, this.token.text);\n        }\n      case 'code':\n        {\n          return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n        }\n      case 'table':\n        {\n          var header = '',\n              body = '',\n              i,\n              row,\n              cell,\n              flags,\n              j;\n\n          // header\n          cell = '';\n          for (i = 0; i < this.token.header.length; i++) {\n            flags = { header: true, align: this.token.align[i] };\n            cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), { header: true, align: this.token.align[i] });\n          }\n          header += this.renderer.tablerow(cell);\n\n          for (i = 0; i < this.token.cells.length; i++) {\n            row = this.token.cells[i];\n\n            cell = '';\n            for (j = 0; j < row.length; j++) {\n              cell += this.renderer.tablecell(this.inline.output(row[j]), { header: false, align: this.token.align[j] });\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          return this.renderer.table(header, body);\n        }\n      case 'blockquote_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'blockquote_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.blockquote(body);\n        }\n      case 'list_start':\n        {\n          var body = '',\n              ordered = this.token.ordered;\n\n          while (this.next().type !== 'list_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.list(body, ordered);\n        }\n      case 'list_item_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'list_item_end') {\n            body += this.token.type === 'text' ? this.parseText() : this.tok();\n          }\n\n          return this.renderer.listitem(body);\n        }\n      case 'loose_item_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'list_item_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.listitem(body);\n        }\n      case 'html':\n        {\n          var html = !this.token.pre && !this.options.pedantic ? this.inline.output(this.token.text) : this.token.text;\n          return this.renderer.html(html);\n        }\n      case 'paragraph':\n        {\n          return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n      case 'text':\n        {\n          return this.renderer.paragraph(this.parseText());\n        }\n    }\n  };\n\n  /**\n   * Helpers\n   */\n\n  function escape(html, encode) {\n    return html.replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n  }\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities \n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n      return '';\n    });\n  }\n\n  function replace(regex, opt) {\n    regex = regex.source;\n    opt = opt || '';\n    return function self(name, val) {\n      if (!name) return new RegExp(regex, opt);\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return self;\n    };\n  }\n\n  function noop() {}\n  noop.exec = noop;\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n\n      var highlight = opt.highlight,\n          tokens,\n          pending,\n          i = 0;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      pending = tokens.length;\n\n      var done = function done(err) {\n        if (err) {\n          opt.highlight = highlight;\n          return callback(err);\n        }\n\n        var out;\n\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n\n        opt.highlight = highlight;\n\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!pending) return done();\n\n      for (; i < tokens.length; i++) {\n        (function (token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n          return highlight(token.text, token.lang, function (err, code) {\n            if (err) return done(err);\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n\n      return;\n    }\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occured:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n\n  marked.defaults = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    sanitizer: null,\n    mangle: true,\n    smartLists: false,\n    silent: false,\n    highlight: null,\n    langPrefix: 'lang-',\n    smartypants: false,\n    headerPrefix: '',\n    renderer: new Renderer(),\n    xhtml: false\n  };\n\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n\n  marked.Renderer = Renderer;\n\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n\n  marked.parse = marked;\n\n  if (true) {\n    module.exports = marked;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return marked;\n    });\n  } else {\n    this.marked = marked;\n  }\n}).call(function () {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"h6ac\")))\n\n/***/ }),\n\n/***/ \"Ipsp\":\n/***/ (function(module, exports) {\n\n// YAML - Core - Copyright TJ Holowaychuk <tj@vision-media.ca> (MIT Licensed)\n\n/**\n * Version triplet.\n */\n\nexports.version = '0.2.3';\n\n// --- Helpers\n\n/**\n * Return 'near \"context\"' where context\n * is replaced by a chunk of _str_.\n *\n * @param  {string} str\n * @return {string}\n * @api public\n */\n\nfunction context(str) {\n  if (typeof str !== 'string') return '';\n  str = str.slice(0, 25).replace(/\\n/g, '\\\\n').replace(/\"/g, '\\\\\\\"');\n  return 'near \"' + str + '\"';\n}\n\n// --- Lexer\n\n/**\n * YAML grammar tokens.\n */\n\nvar tokens = [['comment', /^#[^\\n]*/], ['indent', /^\\n( *)/], ['space', /^ +/], ['true', /^\\b(enabled|true|yes|on)\\b/], ['false', /^\\b(disabled|false|no|off)\\b/], ['null', /^\\b(null|Null|NULL|~)\\b/], ['string', /^\"(.*?)\"/], ['string', /^'(.*?)'/], ['timestamp', /^((\\d{4})-(\\d\\d?)-(\\d\\d?)(?:(?:[ \\t]+)(\\d\\d?):(\\d\\d)(?::(\\d\\d))?)?)/], ['float', /^(\\d+\\.\\d+)/], ['int', /^(\\d+)/], ['doc', /^---/], [',', /^,/], ['{', /^\\{(?![^\\n\\}]*\\}[^\\n]*[^\\s\\n\\}])/], ['}', /^\\}/], ['[', /^\\[(?![^\\n\\]]*\\][^\\n]*[^\\s\\n\\]])/], [']', /^\\]/], ['-', /^\\-/], [':', /^[:]/], ['string', /^(?![^:\\n\\s]*:[^\\/]{2})(([^:,\\]\\}\\n\\s]|(?!\\n)\\s(?!\\s*?\\n)|:\\/\\/|,(?=[^\\n]*\\s*[^\\]\\}\\s\\n]\\s*\\n)|[\\]\\}](?=[^\\n]*\\s*[^\\]\\}\\s\\n]\\s*\\n))*)(?=[,:\\]\\}\\s\\n]|$)/], ['id', /^([\\w][\\w -]*)/]];\n\n/**\n * Tokenize the given _str_.\n *\n * @param  {string} str\n * @return {array}\n * @api private\n */\n\nexports.tokenize = function (str) {\n  var token,\n      captures,\n      ignore,\n      input,\n      indents = 0,\n      lastIndents = 0,\n      stack = [],\n      indentAmount = -1;\n\n  // Windows new line support (CR+LF, \\r\\n)\n  str = str.replace(/\\r\\n/g, \"\\n\");\n\n  while (str.length) {\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      if (captures = tokens[i][1].exec(str)) {\n        token = [tokens[i][0], captures], str = str.replace(tokens[i][1], '');\n        switch (token[0]) {\n          case 'comment':\n            ignore = true;\n            break;\n          case 'indent':\n            lastIndents = indents;\n            // determine the indentation amount from the first indent\n            if (indentAmount == -1) {\n              indentAmount = token[1][1].length;\n            }\n\n            indents = token[1][1].length / indentAmount;\n            if (indents === lastIndents) ignore = true;else if (indents > lastIndents + 1) throw new SyntaxError('invalid indentation, got ' + indents + ' instead of ' + (lastIndents + 1));else if (indents < lastIndents) {\n              input = token[1].input;\n              token = ['dedent'];\n              token.input = input;\n              while (--lastIndents > indents) {\n                stack.push(token);\n              }\n            }\n        }\n        break;\n      }\n    }if (!ignore) if (token) stack.push(token), token = null;else throw new SyntaxError(context(str));\n    ignore = false;\n  }\n  return stack;\n};\n\n// --- Parser\n\n/**\n * Initialize with _tokens_.\n */\n\nfunction Parser(tokens) {\n  this.tokens = tokens;\n}\n\n/**\n * Look-ahead a single token.\n *\n * @return {array}\n * @api public\n */\n\nParser.prototype.peek = function () {\n  return this.tokens[0];\n};\n\n/**\n * Advance by a single token.\n *\n * @return {array}\n * @api public\n */\n\nParser.prototype.advance = function () {\n  return this.tokens.shift();\n};\n\n/**\n * Advance and return the token's value.\n *\n * @return {mixed}\n * @api private\n */\n\nParser.prototype.advanceValue = function () {\n  return this.advance()[1][1];\n};\n\n/**\n * Accept _type_ and advance or do nothing.\n *\n * @param  {string} type\n * @return {bool}\n * @api private\n */\n\nParser.prototype.accept = function (type) {\n  if (this.peekType(type)) return this.advance();\n};\n\n/**\n * Expect _type_ or throw an error _msg_.\n *\n * @param  {string} type\n * @param  {string} msg\n * @api private\n */\n\nParser.prototype.expect = function (type, msg) {\n  if (this.accept(type)) return;\n  throw new Error(msg + ', ' + context(this.peek()[1].input));\n};\n\n/**\n * Return the next token type.\n *\n * @return {string}\n * @api private\n */\n\nParser.prototype.peekType = function (val) {\n  return this.tokens[0] && this.tokens[0][0] === val;\n};\n\n/**\n * space*\n */\n\nParser.prototype.ignoreSpace = function () {\n  while (this.peekType('space')) {\n    this.advance();\n  }\n};\n\n/**\n * (space | indent | dedent)*\n */\n\nParser.prototype.ignoreWhitespace = function () {\n  while (this.peekType('space') || this.peekType('indent') || this.peekType('dedent')) {\n    this.advance();\n  }\n};\n\n/**\n *   block\n * | doc\n * | list\n * | inlineList\n * | hash\n * | inlineHash\n * | string\n * | float\n * | int\n * | true\n * | false\n * | null\n */\n\nParser.prototype.parse = function () {\n  switch (this.peek()[0]) {\n    case 'doc':\n      return this.parseDoc();\n    case '-':\n      return this.parseList();\n    case '{':\n      return this.parseInlineHash();\n    case '[':\n      return this.parseInlineList();\n    case 'id':\n      return this.parseHash();\n    case 'string':\n      return this.advanceValue();\n    case 'timestamp':\n      return this.parseTimestamp();\n    case 'float':\n      return parseFloat(this.advanceValue());\n    case 'int':\n      return parseInt(this.advanceValue());\n    case 'true':\n      this.advanceValue();return true;\n    case 'false':\n      this.advanceValue();return false;\n    case 'null':\n      this.advanceValue();return null;\n  }\n};\n\n/**\n * '---'? indent expr dedent\n */\n\nParser.prototype.parseDoc = function () {\n  this.accept('doc');\n  this.expect('indent', 'expected indent after document');\n  var val = this.parse();\n  this.expect('dedent', 'document not properly dedented');\n  return val;\n};\n\n/**\n *  ( id ':' - expr -\n *  | id ':' - indent expr dedent\n *  )+\n */\n\nParser.prototype.parseHash = function () {\n  var id,\n      hash = {};\n  while (this.peekType('id') && (id = this.advanceValue())) {\n    this.expect(':', 'expected semi-colon after id');\n    this.ignoreSpace();\n    if (this.accept('indent')) hash[id] = this.parse(), this.expect('dedent', 'hash not properly dedented');else hash[id] = this.parse();\n    this.ignoreSpace();\n  }\n  return hash;\n};\n\n/**\n * '{' (- ','? ws id ':' - expr ws)* '}'\n */\n\nParser.prototype.parseInlineHash = function () {\n  var hash = {},\n      id,\n      i = 0;\n  this.accept('{');\n  while (!this.accept('}')) {\n    this.ignoreSpace();\n    if (i) this.expect(',', 'expected comma');\n    this.ignoreWhitespace();\n    if (this.peekType('id') && (id = this.advanceValue())) {\n      this.expect(':', 'expected semi-colon after id');\n      this.ignoreSpace();\n      hash[id] = this.parse();\n      this.ignoreWhitespace();\n    }\n    ++i;\n  }\n  return hash;\n};\n\n/**\n *  ( '-' - expr -\n *  | '-' - indent expr dedent\n *  )+\n */\n\nParser.prototype.parseList = function () {\n  var list = [];\n  while (this.accept('-')) {\n    this.ignoreSpace();\n    if (this.accept('indent')) list.push(this.parse()), this.expect('dedent', 'list item not properly dedented');else list.push(this.parse());\n    this.ignoreSpace();\n  }\n  return list;\n};\n\n/**\n * '[' (- ','? - expr -)* ']'\n */\n\nParser.prototype.parseInlineList = function () {\n  var list = [],\n      i = 0;\n  this.accept('[');\n  while (!this.accept(']')) {\n    this.ignoreSpace();\n    if (i) this.expect(',', 'expected comma');\n    this.ignoreSpace();\n    list.push(this.parse());\n    this.ignoreSpace();\n    ++i;\n  }\n  return list;\n};\n\n/**\n * yyyy-mm-dd hh:mm:ss\n *\n * For full format: http://yaml.org/type/timestamp.html\n */\n\nParser.prototype.parseTimestamp = function () {\n  var token = this.advance()[1];\n  var date = new Date();\n  var year = token[2],\n      month = token[3],\n      day = token[4],\n      hour = token[5] || 0,\n      min = token[6] || 0,\n      sec = token[7] || 0;\n\n  date.setUTCFullYear(year, month - 1, day);\n  date.setUTCHours(hour);\n  date.setUTCMinutes(min);\n  date.setUTCSeconds(sec);\n  date.setUTCMilliseconds(0);\n  return date;\n};\n\n/**\n * Evaluate a _str_ of yaml.\n *\n * @param  {string} str\n * @return {mixed}\n * @api public\n */\n\nexports.eval = function (str) {\n  return new Parser(exports.tokenize(str)).parse();\n};\n\n/***/ }),\n\n/***/ \"f1ur\":\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(\"KM04\")) : typeof define === 'function' && define.amd ? define(['preact'], factory) : global.preactMarkup = factory(global.preact);\n})(this, function (preact) {\n  'use strict';\n\n  var parserDoc = void 0;\n\n  function parseMarkup(markup, type) {\n    var doc = void 0,\n        mime = type === 'html' ? 'text/html' : 'application/xml',\n        parserError = void 0,\n        wrappedMarkup = void 0,\n        tag = void 0;\n\n    if (type === 'html') {\n      tag = 'body';\n      wrappedMarkup = '<!DOCTYPE html>\\n<html><body>' + markup + '</body></html>';\n    } else {\n      tag = 'xml';\n      wrappedMarkup = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>' + markup + '</xml>';\n    }\n\n    try {\n      doc = new DOMParser().parseFromString(wrappedMarkup, mime);\n    } catch (err) {\n      parserError = err;\n    }\n\n    if (!doc && type === 'html') {\n      doc = parserDoc || (parserDoc = buildParserFrame());\n      doc.open();\n      doc.write(wrappedMarkup);\n      doc.close();\n    }\n\n    if (!doc) return;\n\n    var out = doc.getElementsByTagName(tag)[0],\n        fc = out.firstChild;\n\n    if (markup && !fc) {\n      out.error = 'Document parse failed.';\n    }\n\n    if (fc && String(fc.nodeName).toLowerCase() === 'parsererror') {\n      fc.removeChild(fc.firstChild);\n      fc.removeChild(fc.lastChild);\n      out.error = fc.textContent || fc.nodeValue || parserError || 'Unknown error';\n\n      out.removeChild(fc);\n    }\n\n    return out;\n  }\n\n  function buildParserFrame() {\n    if (document.implementation && document.implementation.createHTMLDocument) {\n      return document.implementation.createHTMLDocument('');\n    }\n    var frame = document.createElement('iframe');\n    frame.style.cssText = 'position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;';\n    frame.setAttribute('sandbox', 'allow-forms');\n    document.body.appendChild(frame);\n    return frame.contentWindow.document;\n  }\n\n  var EMPTY_OBJ$1 = {};\n\n  function toVdom(node, visitor, h, options) {\n    walk.visitor = visitor;\n    walk.h = h;\n    walk.options = options || EMPTY_OBJ$1;\n    return walk(node);\n  }\n\n  function walk(n, index, arr) {\n    if (n.nodeType === 3) {\n      var text = 'textContent' in n ? n.textContent : n.nodeValue || '';\n\n      if (walk.options.trim !== false) {\n        var isFirstOrLast = index === 0 || index === arr.length - 1;\n\n        if (text.match(/^[\\s\\n]+$/g) && walk.options.trim !== 'all') {\n          text = ' ';\n        } else {\n          text = text.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g, walk.options.trim === 'all' || isFirstOrLast ? '' : ' ');\n        }\n\n        if ((!text || text === ' ') && arr.length > 1 && isFirstOrLast) return null;\n      }\n      return text;\n    }\n    if (n.nodeType !== 1) return null;\n    var nodeName = String(n.nodeName).toLowerCase();\n\n    if (nodeName === 'script' && !walk.options.allowScripts) return null;\n\n    var out = walk.h(nodeName, getProps(n.attributes), walkChildren(n.childNodes));\n    if (walk.visitor) walk.visitor(out);\n    return out;\n  }\n\n  function getProps(attrs) {\n    var len = attrs && attrs.length;\n    if (!len) return null;\n    var props = {};\n    for (var i = 0; i < len; i++) {\n      var _attrs$i = attrs[i];\n      var name = _attrs$i.name;\n      var value = _attrs$i.value;\n\n      if (value === '') value = true;\n      if (name.substring(0, 2) === 'on' && walk.options.allowEvents) {\n        value = new Function(value);\n      }\n      props[name] = value;\n    }\n    return props;\n  }\n\n  function walkChildren(children) {\n    var c = children && Array.prototype.map.call(children, walk).filter(exists);\n    return c && c.length ? c : null;\n  }\n\n  var exists = function exists(x) {\n    return x;\n  };\n\n  var EMPTY_OBJ = {};\n\n  function markupToVdom(markup, type, reviver, map, options) {\n    var dom = parseMarkup(markup, type);\n\n    if (dom && dom.error) {\n      throw new Error(dom.error);\n    }\n\n    var body = dom && dom.body || dom;\n    visitor.map = map || EMPTY_OBJ;\n    var vdom = body && toVdom(body, visitor, reviver, options);\n    visitor.map = null;\n\n    return vdom && vdom.children || null;\n  }\n\n  function toCamelCase(name) {\n    return name.replace(/-(.)/g, function (match, letter) {\n      return letter.toUpperCase();\n    });\n  }\n\n  function visitor(node) {\n    var name = node.nodeName.toLowerCase(),\n        map = visitor.map;\n    if (map && map.hasOwnProperty(name)) {\n      node.nodeName = map[name];\n      node.attributes = Object.keys(node.attributes || {}).reduce(function (attrs, attrName) {\n        attrs[toCamelCase(attrName)] = node.attributes[attrName];\n        return attrs;\n      }, {});\n    } else {\n      node.nodeName = name.replace(/[^a-z0-9-]/i, '');\n    }\n  }\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var inherits = function inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  };\n\n  var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var customReviver = void 0;\n\n  var Markup = function (_Component) {\n    inherits(Markup, _Component);\n\n    function Markup() {\n      classCallCheck(this, Markup);\n      return possibleConstructorReturn(this, _Component.apply(this, arguments));\n    }\n\n    Markup.setReviver = function setReviver(h) {\n      customReviver = h;\n    };\n\n    Markup.prototype.shouldComponentUpdate = function shouldComponentUpdate(_ref) {\n      var wrap = _ref.wrap;\n      var type = _ref.type;\n      var markup = _ref.markup;\n\n      var p = this.props;\n      return wrap !== p.wrap || type !== p.type || markup !== p.markup;\n    };\n\n    Markup.prototype.setComponents = function setComponents(components) {\n      this.map = {};\n      if (components) {\n        for (var i in components) {\n          if (components.hasOwnProperty(i)) {\n            var name = i.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g, '$1$3-$2$4').toLowerCase();\n            this.map[name] = components[i];\n          }\n        }\n      }\n    };\n\n    Markup.prototype.render = function render(_ref2) {\n      var _ref2$wrap = _ref2.wrap;\n      var wrap = _ref2$wrap === undefined ? true : _ref2$wrap;\n      var type = _ref2.type;\n      var markup = _ref2.markup;\n      var components = _ref2.components;\n      var reviver = _ref2.reviver;\n      var onError = _ref2.onError;\n      var allowScripts = _ref2['allow-scripts'];\n      var allowEvents = _ref2['allow-events'];\n      var trim = _ref2.trim;\n      var props = objectWithoutProperties(_ref2, ['wrap', 'type', 'markup', 'components', 'reviver', 'onError', 'allow-scripts', 'allow-events', 'trim']);\n\n      var h = reviver || this.reviver || this.constructor.prototype.reviver || customReviver || preact.h,\n          vdom = void 0;\n\n      this.setComponents(components);\n\n      var options = {\n        allowScripts: allowScripts,\n        allowEvents: allowEvents,\n        trim: trim\n      };\n\n      try {\n        vdom = markupToVdom(markup, type, h, this.map, options);\n      } catch (error) {\n        if (onError) {\n          onError({ error: error });\n        } else if (typeof console !== 'undefined' && console.error) {\n          console.error('preact-markup: ' + error);\n        }\n      }\n\n      if (wrap === false) return vdom && vdom[0] || null;\n\n      var c = props.hasOwnProperty('className') ? 'className' : 'class',\n          cl = props[c];\n      if (!cl) props[c] = 'markup';else if (cl.splice) cl.splice(0, 0, 'markup');else if (typeof cl === 'string') props[c] += ' markup';else if (typeof cl === 'object') cl.markup = true;\n\n      return h('div', props, vdom || null);\n    };\n\n    return Markup;\n  }(preact.Component);\n\n  return Markup;\n});\n//# sourceMappingURL=preact-markup.js.map\n\n/***/ }),\n\n/***/ \"h6ac\":\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ }),\n\n/***/ \"iec2\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ../node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"KM04\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ../node_modules/yaml/lib/yaml.js\nvar yaml = __webpack_require__(\"Ipsp\");\nvar yaml_default = /*#__PURE__*/__webpack_require__.n(yaml);\n\n// EXTERNAL MODULE: ../node_modules/marked/lib/marked.js\nvar marked = __webpack_require__(\"3F7m\");\nvar marked_default = /*#__PURE__*/__webpack_require__.n(marked);\n\n// EXTERNAL MODULE: ../node_modules/preact-markup/dist/preact-markup.js\nvar preact_markup = __webpack_require__(\"f1ur\");\nvar preact_markup_default = /*#__PURE__*/__webpack_require__.n(preact_markup);\n\n// CONCATENATED MODULE: ./lib/markdown.js\n\n\n\n\n// Cache of markdown to generated html\nvar CACHE = {};\n\n// Marked options (See https://github.com/chjj/marked#options-1)\nvar OPTIONS = {\n\t// sanitize: true\n};\n\n// Convert Markdown to HTML using Marked\nvar markdown_markdownToHtml = function markdownToHtml(md) {\n\treturn CACHE[md] || (CACHE[md] = marked_default()(md, OPTIONS));\n};\n\n/** Component that renders Markdown to HTML via VDOM, using preact-markup.\r\n *\t@param props.markdown\tMarkdown string to render.\r\n *\t@returns VNode\r\n */\n/* harmony default export */ var lib_markdown = (function (_ref) {\n\tvar markdown = _ref.markdown;\n\n\tvar markup = markdown_markdownToHtml(markdown);\n\treturn Object(preact_min[\"h\"])(preact_markup_default.a, { markup: markup, type: 'html', trim: true });\n});\n// EXTERNAL MODULE: ./config.json\nvar config = __webpack_require__(\"MmR0\");\nvar config_default = /*#__PURE__*/__webpack_require__.n(config);\n\n// CONCATENATED MODULE: ../node_modules/babel-loader/lib?{\"babelrc\":false,\"presets\":[[\"D://msys64//home//LiYongchao//linychuo.github.io//node_modules//babel-preset-env//lib//index.js\",{\"loose\":true,\"uglify\":true,\"modules\":false,\"targets\":{\"browsers\":[\"> 1%\",\"last 2 versions\",\"IE >= 9\"]},\"exclude\":[\"transform-regenerator\",\"transform-es2015-typeof-symbol\"]}],\"D://msys64//home//LiYongchao//linychuo.github.io//node_modules//babel-preset-stage-1//lib//index.js\"],\"plugins\":[\"D://msys64//home//LiYongchao//linychuo.github.io//node_modules//babel-plugin-transform-object-assign//lib//index.js\",\"D://msys64//home//LiYongchao//linychuo.github.io//node_modules//babel-plugin-transform-decorators-legacy//lib//index.js\",\"D://msys64//home//LiYongchao//linychuo.github.io//node_modules//babel-plugin-transform-react-constant-elements//lib//index.js\",\"D://msys64//home//LiYongchao//linychuo.github.io//node_modules//babel-plugin-transform-react-remove-prop-types//lib//index.js\",[\"D://msys64//home//LiYongchao//linychuo.github.io//node_modules//babel-plugin-transform-react-jsx//lib//index.js\",{\"pragma\":\"h\"}],[\"D://msys64//home//LiYongchao//linychuo.github.io//node_modules//babel-plugin-jsx-pragmatic//jsx-pragmatic.js\",{\"module\":\"preact\",\"export\":\"h\",\"import\":\"h\"}]]}!./routes/article.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return article_Article; });\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\nvar FRONT_MATTER_REG = /^\\s*\\-\\-\\-\\n\\s*([\\s\\S]*?)\\s*\\n\\-\\-\\-\\n/i;\n\nfunction parseContent(text) {\n\tvar _ref = text.match(FRONT_MATTER_REG) || [],\n\t    frontMatter = _ref[1],\n\t    meta = frontMatter && yaml_default.a.eval('---\\n' + frontMatter.replace(/^/gm, '  ') + '\\n') || {},\n\t    content = text.replace(FRONT_MATTER_REG, '');\n\n\treturn { meta: meta, content: content };\n}\n\nvar article_Article = function (_Component) {\n\t_inherits(Article, _Component);\n\n\tfunction Article() {\n\t\t_classCallCheck(this, Article);\n\n\t\treturn _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t}\n\n\tArticle.prototype.componentWillMount = function componentWillMount() {\n\t\tvar _this2 = this;\n\n\t\tvar name = this.props.name;\n\t\tvar article = config_default.a.articles.find(function (item) {\n\t\t\treturn item.name === name;\n\t\t});\n\t\tfetch(article.url).then(function (r) {\n\t\t\treturn r.text();\n\t\t}).then(function (r) {\n\t\t\t_this2.setState(parseContent(r));\n\t\t});\n\t};\n\n\tArticle.prototype.render = function render(_ref2, _ref3) {\n\t\tvar name = _ref2.name;\n\t\tvar meta = _ref3.meta,\n\t\t    content = _ref3.content;\n\n\t\treturn Object(preact_min[\"h\"])(\n\t\t\t'div',\n\t\t\t{ 'class': 'page-content' },\n\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t'div',\n\t\t\t\t{ 'class': 'wrapper' },\n\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ 'class': 'post' },\n\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t'header',\n\t\t\t\t\t\t{ 'class': 'post-header' },\n\t\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t\t'h1',\n\t\t\t\t\t\t\t{ 'class': 'post-title' },\n\t\t\t\t\t\t\tmeta && meta.title\n\t\t\t\t\t\t),\n\t\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t\t'p',\n\t\t\t\t\t\t\t{ 'class': 'post-meta' },\n\t\t\t\t\t\t\tmeta && meta.data && meta.date.toDateString()\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t'article',\n\t\t\t\t\t\t{ 'class': 'post-content' },\n\t\t\t\t\t\tcontent && Object(preact_min[\"h\"])(lib_markdown, { markdown: content })\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t};\n\n\treturn Article;\n}(preact_min[\"Component\"]);\n\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.chunk.5f890.js","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities \n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/marked/lib/marked.js","// YAML - Core - Copyright TJ Holowaychuk <tj@vision-media.ca> (MIT Licensed)\n\n/**\n * Version triplet.\n */\n\nexports.version = '0.2.3'\n\n// --- Helpers\n\n/**\n * Return 'near \"context\"' where context\n * is replaced by a chunk of _str_.\n *\n * @param  {string} str\n * @return {string}\n * @api public\n */\n\nfunction context(str) {\n  if (typeof str !== 'string') return ''\n  str = str\n    .slice(0, 25)\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\"/g, '\\\\\\\"')\n  return 'near \"' + str + '\"'\n}\n\n// --- Lexer\n\n/**\n * YAML grammar tokens.\n */\n\nvar tokens = [\n  ['comment', /^#[^\\n]*/],\n  ['indent', /^\\n( *)/],\n  ['space', /^ +/],\n  ['true', /^\\b(enabled|true|yes|on)\\b/],\n  ['false', /^\\b(disabled|false|no|off)\\b/],\n  ['null', /^\\b(null|Null|NULL|~)\\b/],\n  ['string', /^\"(.*?)\"/],\n  ['string', /^'(.*?)'/],\n  ['timestamp', /^((\\d{4})-(\\d\\d?)-(\\d\\d?)(?:(?:[ \\t]+)(\\d\\d?):(\\d\\d)(?::(\\d\\d))?)?)/],\n  ['float', /^(\\d+\\.\\d+)/],\n  ['int', /^(\\d+)/],\n  ['doc', /^---/],\n  [',', /^,/],\n  ['{', /^\\{(?![^\\n\\}]*\\}[^\\n]*[^\\s\\n\\}])/],\n  ['}', /^\\}/],\n  ['[', /^\\[(?![^\\n\\]]*\\][^\\n]*[^\\s\\n\\]])/],\n  [']', /^\\]/],\n  ['-', /^\\-/],\n  [':', /^[:]/],\n  ['string', /^(?![^:\\n\\s]*:[^\\/]{2})(([^:,\\]\\}\\n\\s]|(?!\\n)\\s(?!\\s*?\\n)|:\\/\\/|,(?=[^\\n]*\\s*[^\\]\\}\\s\\n]\\s*\\n)|[\\]\\}](?=[^\\n]*\\s*[^\\]\\}\\s\\n]\\s*\\n))*)(?=[,:\\]\\}\\s\\n]|$)/], \n  ['id', /^([\\w][\\w -]*)/]\n]\n\n/**\n * Tokenize the given _str_.\n *\n * @param  {string} str\n * @return {array}\n * @api private\n */\n\nexports.tokenize = function (str) {\n  var token, captures, ignore, input,\n      indents = 0, lastIndents = 0,\n      stack = [], indentAmount = -1\n\n  // Windows new line support (CR+LF, \\r\\n)\n  str = str.replace(/\\r\\n/g, \"\\n\");\n\n  while (str.length) {\n    for (var i = 0, len = tokens.length; i < len; ++i)\n      if (captures = tokens[i][1].exec(str)) {\n        token = [tokens[i][0], captures],\n        str = str.replace(tokens[i][1], '')\n        switch (token[0]) {\n          case 'comment':\n            ignore = true\n            break\n          case 'indent':\n            lastIndents = indents \n            // determine the indentation amount from the first indent\n            if (indentAmount == -1) {\n              indentAmount = token[1][1].length\n            }\n\n            indents = token[1][1].length / indentAmount\n            if (indents === lastIndents)\n              ignore = true\n            else if (indents > lastIndents + 1)\n              throw new SyntaxError('invalid indentation, got ' + indents + ' instead of ' + (lastIndents + 1))\n            else if (indents < lastIndents) {\n              input = token[1].input\n              token = ['dedent']\n              token.input = input\n              while (--lastIndents > indents)\n                stack.push(token)\n            }\n        }\n        break\n      }\n    if (!ignore)\n      if (token)\n        stack.push(token),\n        token = null\n      else \n        throw new SyntaxError(context(str))\n    ignore = false\n  }\n  return stack\n}\n\n// --- Parser\n\n/**\n * Initialize with _tokens_.\n */\n\nfunction Parser(tokens) {\n  this.tokens = tokens\n}\n\n/**\n * Look-ahead a single token.\n *\n * @return {array}\n * @api public\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[0]\n}\n\n/**\n * Advance by a single token.\n *\n * @return {array}\n * @api public\n */\n\nParser.prototype.advance = function() {\n  return this.tokens.shift()\n}\n\n/**\n * Advance and return the token's value.\n *\n * @return {mixed}\n * @api private\n */\n\nParser.prototype.advanceValue = function() {\n  return this.advance()[1][1]\n}\n\n/**\n * Accept _type_ and advance or do nothing.\n *\n * @param  {string} type\n * @return {bool}\n * @api private\n */\n\nParser.prototype.accept = function(type) {\n  if (this.peekType(type))\n    return this.advance()\n}\n\n/**\n * Expect _type_ or throw an error _msg_.\n *\n * @param  {string} type\n * @param  {string} msg\n * @api private\n */\n\nParser.prototype.expect = function(type, msg) {\n  if (this.accept(type)) return\n  throw new Error(msg + ', ' + context(this.peek()[1].input))\n}\n\n/**\n * Return the next token type.\n *\n * @return {string}\n * @api private\n */\n\nParser.prototype.peekType = function(val) {\n  return this.tokens[0] &&\n         this.tokens[0][0] === val\n}\n\n/**\n * space*\n */\n\nParser.prototype.ignoreSpace = function() {\n  while (this.peekType('space'))\n    this.advance()\n}\n\n/**\n * (space | indent | dedent)*\n */\n\nParser.prototype.ignoreWhitespace = function() {\n  while (this.peekType('space') ||\n         this.peekType('indent') ||\n         this.peekType('dedent'))\n    this.advance()\n}\n\n/**\n *   block\n * | doc\n * | list\n * | inlineList\n * | hash\n * | inlineHash\n * | string\n * | float\n * | int\n * | true\n * | false\n * | null\n */\n\nParser.prototype.parse = function() {\n  switch (this.peek()[0]) {\n    case 'doc':\n      return this.parseDoc()\n    case '-':\n      return this.parseList()\n    case '{':\n      return this.parseInlineHash()\n    case '[':\n      return this.parseInlineList()\n    case 'id':\n      return this.parseHash()\n    case 'string':\n      return this.advanceValue()\n    case 'timestamp':\n      return this.parseTimestamp()\n    case 'float':\n      return parseFloat(this.advanceValue())\n    case 'int':\n      return parseInt(this.advanceValue())\n    case 'true':\n      this.advanceValue(); return true\n    case 'false':\n      this.advanceValue(); return false\n    case 'null':\n      this.advanceValue(); return null\n  }\n}\n\n/**\n * '---'? indent expr dedent\n */\n\nParser.prototype.parseDoc = function() {\n  this.accept('doc')\n  this.expect('indent', 'expected indent after document')\n  var val = this.parse()\n  this.expect('dedent', 'document not properly dedented')\n  return val\n}\n\n/**\n *  ( id ':' - expr -\n *  | id ':' - indent expr dedent\n *  )+\n */\n\nParser.prototype.parseHash = function() {\n  var id, hash = {}\n  while (this.peekType('id') && (id = this.advanceValue())) {\n    this.expect(':', 'expected semi-colon after id')\n    this.ignoreSpace()\n    if (this.accept('indent'))\n      hash[id] = this.parse(),\n      this.expect('dedent', 'hash not properly dedented')\n    else\n      hash[id] = this.parse()\n    this.ignoreSpace()\n  }\n  return hash\n}\n\n/**\n * '{' (- ','? ws id ':' - expr ws)* '}'\n */\n\nParser.prototype.parseInlineHash = function() {\n  var hash = {}, id, i = 0\n  this.accept('{')\n  while (!this.accept('}')) {\n    this.ignoreSpace()\n    if (i) this.expect(',', 'expected comma')\n    this.ignoreWhitespace()\n    if (this.peekType('id') && (id = this.advanceValue())) {\n      this.expect(':', 'expected semi-colon after id')\n      this.ignoreSpace()\n      hash[id] = this.parse()\n      this.ignoreWhitespace()\n    }\n    ++i\n  }\n  return hash\n}\n\n/**\n *  ( '-' - expr -\n *  | '-' - indent expr dedent\n *  )+\n */\n\nParser.prototype.parseList = function() {\n  var list = []\n  while (this.accept('-')) {\n    this.ignoreSpace()\n    if (this.accept('indent'))\n      list.push(this.parse()),\n      this.expect('dedent', 'list item not properly dedented')\n    else\n      list.push(this.parse())\n    this.ignoreSpace()\n  }\n  return list\n}\n\n/**\n * '[' (- ','? - expr -)* ']'\n */\n\nParser.prototype.parseInlineList = function() {\n  var list = [], i = 0\n  this.accept('[')\n  while (!this.accept(']')) {\n    this.ignoreSpace()\n    if (i) this.expect(',', 'expected comma')\n    this.ignoreSpace()\n    list.push(this.parse())\n    this.ignoreSpace()\n    ++i\n  }\n  return list\n}\n\n/**\n * yyyy-mm-dd hh:mm:ss\n *\n * For full format: http://yaml.org/type/timestamp.html\n */\n\nParser.prototype.parseTimestamp = function() {\n  var token = this.advance()[1]\n  var date = new Date\n  var year = token[2]\n    , month = token[3]\n    , day = token[4]\n    , hour = token[5] || 0 \n    , min = token[6] || 0\n    , sec = token[7] || 0\n\n  date.setUTCFullYear(year, month-1, day)\n  date.setUTCHours(hour)\n  date.setUTCMinutes(min)\n  date.setUTCSeconds(sec)\n  date.setUTCMilliseconds(0)\n  return date\n}\n\n/**\n * Evaluate a _str_ of yaml.\n *\n * @param  {string} str\n * @return {mixed}\n * @api public\n */\n\nexports.eval = function(str) {\n  return (new Parser(exports.tokenize(str))).parse()\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/yaml/lib/yaml.js","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('preact')) :\n  typeof define === 'function' && define.amd ? define(['preact'], factory) :\n  (global.preactMarkup = factory(global.preact));\n}(this, function (preact) { 'use strict';\n\n  var parserDoc = void 0;\n\n  function parseMarkup(markup, type) {\n  \tvar doc = void 0,\n  \t    mime = type === 'html' ? 'text/html' : 'application/xml',\n  \t    parserError = void 0,\n  \t    wrappedMarkup = void 0,\n  \t    tag = void 0;\n\n  \tif (type === 'html') {\n  \t\ttag = 'body';\n  \t\twrappedMarkup = '<!DOCTYPE html>\\n<html><body>' + markup + '</body></html>';\n  \t} else {\n  \t\ttag = 'xml';\n  \t\twrappedMarkup = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>' + markup + '</xml>';\n  \t}\n\n  \ttry {\n  \t\tdoc = new DOMParser().parseFromString(wrappedMarkup, mime);\n  \t} catch (err) {\n  \t\tparserError = err;\n  \t}\n\n  \tif (!doc && type === 'html') {\n  \t\tdoc = parserDoc || (parserDoc = buildParserFrame());\n  \t\tdoc.open();\n  \t\tdoc.write(wrappedMarkup);\n  \t\tdoc.close();\n  \t}\n\n  \tif (!doc) return;\n\n  \tvar out = doc.getElementsByTagName(tag)[0],\n  \t    fc = out.firstChild;\n\n  \tif (markup && !fc) {\n  \t\tout.error = 'Document parse failed.';\n  \t}\n\n  \tif (fc && String(fc.nodeName).toLowerCase() === 'parsererror') {\n  \t\tfc.removeChild(fc.firstChild);\n  \t\tfc.removeChild(fc.lastChild);\n  \t\tout.error = fc.textContent || fc.nodeValue || parserError || 'Unknown error';\n\n  \t\tout.removeChild(fc);\n  \t}\n\n  \treturn out;\n  }\n\n  function buildParserFrame() {\n  \tif (document.implementation && document.implementation.createHTMLDocument) {\n  \t\treturn document.implementation.createHTMLDocument('');\n  \t}\n  \tvar frame = document.createElement('iframe');\n  \tframe.style.cssText = 'position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;';\n  \tframe.setAttribute('sandbox', 'allow-forms');\n  \tdocument.body.appendChild(frame);\n  \treturn frame.contentWindow.document;\n  }\n\n  var EMPTY_OBJ$1 = {};\n\n  function toVdom(node, visitor, h, options) {\n  \twalk.visitor = visitor;\n  \twalk.h = h;\n  \twalk.options = options || EMPTY_OBJ$1;\n  \treturn walk(node);\n  }\n\n  function walk(n, index, arr) {\n  \tif (n.nodeType === 3) {\n  \t\tvar text = 'textContent' in n ? n.textContent : n.nodeValue || '';\n\n  \t\tif (walk.options.trim !== false) {\n  \t\t\tvar isFirstOrLast = index === 0 || index === arr.length - 1;\n\n  \t\t\tif (text.match(/^[\\s\\n]+$/g) && walk.options.trim !== 'all') {\n  \t\t\t\ttext = ' ';\n  \t\t\t} else {\n  \t\t\t\ttext = text.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g, walk.options.trim === 'all' || isFirstOrLast ? '' : ' ');\n  \t\t\t}\n\n  \t\t\tif ((!text || text === ' ') && arr.length > 1 && isFirstOrLast) return null;\n  \t\t}\n  \t\treturn text;\n  \t}\n  \tif (n.nodeType !== 1) return null;\n  \tvar nodeName = String(n.nodeName).toLowerCase();\n\n  \tif (nodeName === 'script' && !walk.options.allowScripts) return null;\n\n  \tvar out = walk.h(nodeName, getProps(n.attributes), walkChildren(n.childNodes));\n  \tif (walk.visitor) walk.visitor(out);\n  \treturn out;\n  }\n\n  function getProps(attrs) {\n  \tvar len = attrs && attrs.length;\n  \tif (!len) return null;\n  \tvar props = {};\n  \tfor (var i = 0; i < len; i++) {\n  \t\tvar _attrs$i = attrs[i];\n  \t\tvar name = _attrs$i.name;\n  \t\tvar value = _attrs$i.value;\n\n  \t\tif (value === '') value = true;\n  \t\tif (name.substring(0, 2) === 'on' && walk.options.allowEvents) {\n  \t\t\tvalue = new Function(value);\n  \t\t}\n  \t\tprops[name] = value;\n  \t}\n  \treturn props;\n  }\n\n  function walkChildren(children) {\n  \tvar c = children && Array.prototype.map.call(children, walk).filter(exists);\n  \treturn c && c.length ? c : null;\n  }\n\n  var exists = function (x) {\n  \treturn x;\n  };\n\n  var EMPTY_OBJ = {};\n\n  function markupToVdom(markup, type, reviver, map, options) {\n  \tvar dom = parseMarkup(markup, type);\n\n  \tif (dom && dom.error) {\n  \t\tthrow new Error(dom.error);\n  \t}\n\n  \tvar body = dom && dom.body || dom;\n  \tvisitor.map = map || EMPTY_OBJ;\n  \tvar vdom = body && toVdom(body, visitor, reviver, options);\n  \tvisitor.map = null;\n\n  \treturn vdom && vdom.children || null;\n  }\n\n  function toCamelCase(name) {\n  \treturn name.replace(/-(.)/g, function (match, letter) {\n  \t\treturn letter.toUpperCase();\n  \t});\n  }\n\n  function visitor(node) {\n  \tvar name = node.nodeName.toLowerCase(),\n  \t    map = visitor.map;\n  \tif (map && map.hasOwnProperty(name)) {\n  \t\tnode.nodeName = map[name];\n  \t\tnode.attributes = Object.keys(node.attributes || {}).reduce(function (attrs, attrName) {\n  \t\t\tattrs[toCamelCase(attrName)] = node.attributes[attrName];\n  \t\t\treturn attrs;\n  \t\t}, {});\n  \t} else {\n  \t\tnode.nodeName = name.replace(/[^a-z0-9-]/i, '');\n  \t}\n  }\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var objectWithoutProperties = function (obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  };\n\n  var possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var customReviver = void 0;\n\n  var Markup = function (_Component) {\n  \tinherits(Markup, _Component);\n\n  \tfunction Markup() {\n  \t\tclassCallCheck(this, Markup);\n  \t\treturn possibleConstructorReturn(this, _Component.apply(this, arguments));\n  \t}\n\n  \tMarkup.setReviver = function setReviver(h) {\n  \t\tcustomReviver = h;\n  \t};\n\n  \tMarkup.prototype.shouldComponentUpdate = function shouldComponentUpdate(_ref) {\n  \t\tvar wrap = _ref.wrap;\n  \t\tvar type = _ref.type;\n  \t\tvar markup = _ref.markup;\n\n  \t\tvar p = this.props;\n  \t\treturn wrap !== p.wrap || type !== p.type || markup !== p.markup;\n  \t};\n\n  \tMarkup.prototype.setComponents = function setComponents(components) {\n  \t\tthis.map = {};\n  \t\tif (components) {\n  \t\t\tfor (var i in components) {\n  \t\t\t\tif (components.hasOwnProperty(i)) {\n  \t\t\t\t\tvar name = i.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g, '$1$3-$2$4').toLowerCase();\n  \t\t\t\t\tthis.map[name] = components[i];\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \tMarkup.prototype.render = function render(_ref2) {\n  \t\tvar _ref2$wrap = _ref2.wrap;\n  \t\tvar wrap = _ref2$wrap === undefined ? true : _ref2$wrap;\n  \t\tvar type = _ref2.type;\n  \t\tvar markup = _ref2.markup;\n  \t\tvar components = _ref2.components;\n  \t\tvar reviver = _ref2.reviver;\n  \t\tvar onError = _ref2.onError;\n  \t\tvar allowScripts = _ref2['allow-scripts'];\n  \t\tvar allowEvents = _ref2['allow-events'];\n  \t\tvar trim = _ref2.trim;\n  \t\tvar props = objectWithoutProperties(_ref2, ['wrap', 'type', 'markup', 'components', 'reviver', 'onError', 'allow-scripts', 'allow-events', 'trim']);\n\n  \t\tvar h = reviver || this.reviver || this.constructor.prototype.reviver || customReviver || preact.h,\n  \t\t    vdom = void 0;\n\n  \t\tthis.setComponents(components);\n\n  \t\tvar options = {\n  \t\t\tallowScripts: allowScripts,\n  \t\t\tallowEvents: allowEvents,\n  \t\t\ttrim: trim\n  \t\t};\n\n  \t\ttry {\n  \t\t\tvdom = markupToVdom(markup, type, h, this.map, options);\n  \t\t} catch (error) {\n  \t\t\tif (onError) {\n  \t\t\t\tonError({ error: error });\n  \t\t\t} else if (typeof console !== 'undefined' && console.error) {\n  \t\t\t\tconsole.error('preact-markup: ' + error);\n  \t\t\t}\n  \t\t}\n\n  \t\tif (wrap === false) return vdom && vdom[0] || null;\n\n  \t\tvar c = props.hasOwnProperty('className') ? 'className' : 'class',\n  \t\t    cl = props[c];\n  \t\tif (!cl) props[c] = 'markup';else if (cl.splice) cl.splice(0, 0, 'markup');else if (typeof cl === 'string') props[c] += ' markup';else if (typeof cl === 'object') cl.markup = true;\n\n  \t\treturn h('div', props, vdom || null);\n  \t};\n\n  \treturn Markup;\n  }(preact.Component);\n\n  return Markup;\n\n}));\n//# sourceMappingURL=preact-markup.js.map\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/preact-markup/dist/preact-markup.js","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/webpack/buildin/global.js","import { Component } from 'preact';\r\nimport yaml from 'yaml';\r\nimport Markdown from '../lib/markdown';\r\nimport config from '../config';\r\n\r\nconst FRONT_MATTER_REG = /^\\s*\\-\\-\\-\\n\\s*([\\s\\S]*?)\\s*\\n\\-\\-\\-\\n/i;\r\n\r\nfunction parseContent(text) {\r\n\tlet [,frontMatter] = text.match(FRONT_MATTER_REG) || [],\r\n\t\tmeta = frontMatter && yaml.eval('---\\n'+frontMatter.replace(/^/gm,'  ')+'\\n') || {},\r\n\t\tcontent = text.replace(FRONT_MATTER_REG, '');\r\n\treturn {meta, content};\r\n}\r\n\r\nexport default class Article extends Component {\r\n\tcomponentWillMount() {\r\n\t\tlet name = this.props.name;\r\n\t\tlet article = config.articles.find(item => item.name === name );\r\n\t\tfetch(article.url)\r\n\t\t\t.then(r => r.text())\r\n\t\t\t.then(r => {\r\n\t\t\t\tthis.setState(parseContent(r));\r\n\t\t\t});\r\n\t}\r\n\r\n\trender({ name }, { meta, content }) {\r\n\t\treturn (\r\n\t\t\t<div class=\"page-content\">\r\n      \t\t\t<div class=\"wrapper\">\r\n        \t\t\t<div class=\"post\">\r\n\t\t\t\t\t\t<header class=\"post-header\">\r\n\t\t\t\t\t\t\t<h1 class=\"post-title\">{meta && meta.title}</h1>\r\n\t\t\t\t\t\t\t<p class=\"post-meta\">{meta && meta.data && meta.date.toDateString()}</p>\r\n\t\t\t\t\t\t</header>\r\n\r\n\t\t\t\t\t\t<article class=\"post-content\">\r\n\t\t\t\t\t\t\t{content && <Markdown markdown={content}/>}\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./routes/article.js","import marked from 'marked';\r\nimport Markup from 'preact-markup';\r\n\r\n// Cache of markdown to generated html\r\nconst CACHE = {};\r\n\r\n// Marked options (See https://github.com/chjj/marked#options-1)\r\nconst OPTIONS = {\r\n\t// sanitize: true\r\n};\r\n\r\n// Convert Markdown to HTML using Marked\r\nconst markdownToHtml = md => (\r\n\tCACHE[md] || (CACHE[md] = marked(md, OPTIONS))\r\n);\r\n\r\n/** Component that renders Markdown to HTML via VDOM, using preact-markup.\r\n *\t@param props.markdown\tMarkdown string to render.\r\n *\t@returns VNode\r\n */\r\nexport default ({ markdown}) => {\r\n\tlet markup = markdownToHtml(markdown);\r\n\treturn (\r\n\t\t<Markup markup={markup} type=\"html\" trim={true} />\r\n\t);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/markdown.js"],"sourceRoot":""}