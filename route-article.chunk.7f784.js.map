{"version":3,"sources":["webpack:///route-article.chunk.7f784.js","webpack:///../node_modules/marked/lib/marked.js","webpack:///../node_modules/yaml/lib/yaml.js","webpack:///../node_modules/highlight.js/lib/highlight.js","webpack:///../node_modules/highlight.js/lib/languages/python.js","webpack:///../node_modules/highlight.js/lib/languages/bash.js","webpack:///../node_modules/highlight.js/lib/languages/clojure.js","webpack:///../node_modules/highlight.js/lib/languages/javascript.js","webpack:///../node_modules/preact-markup/dist/preact-markup.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///./routes/article.js","webpack:///./lib/markdown.js","webpack:///./routes/loading.gif","webpack:///../node_modules/highlight.js/lib/languages/haml.js"],"names":["webpackJsonp","3F7m","module","exports","__webpack_require__","Lexer","options","this","tokens","links","marked","defaults","rules","block","normal","gfm","tables","InlineLexer","inline","renderer","Renderer","Error","breaks","pedantic","TextRenderer","Parser","token","escape","html","encode","replace","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","edit","regex","opt","source","name","val","getRegex","RegExp","resolveUrl","base","href","baseUrls","test","slice","noop","merge","obj","target","key","i","arguments","length","Object","prototype","hasOwnProperty","call","src","callback","toString","pending","highlight","lex","e","done","err","out","parse","type","text","lang","code","escaped","message","silent","newline","fences","hr","heading","nptable","blockquote","list","def","table","lheading","paragraph","_label","_title","bullet","item","_tag","top","next","loose","cap","bull","b","space","tag","l","isordered","exec","push","depth","header","split","align","cells","ordered","start","match","indexOf","smartLists","join","sanitize","pre","sanitizer","title","charCodeAt","autolink","url","link","reflink","nolink","strong","em","br","del","_scheme","_email","_inside","_href","_backpedal","output","mangle","inLink","outputLink","codespan","trim","smartypants","image","ch","Math","random","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","baseUrl","originIndependentUrl","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","parser","lexer","inlineLexer","window","Ipsp","context","str","version","tokenize","captures","ignore","input","indents","lastIndents","stack","indentAmount","len","SyntaxError","advance","shift","advanceValue","accept","peekType","expect","msg","ignoreSpace","ignoreWhitespace","parseDoc","parseList","parseInlineHash","parseInlineList","parseHash","parseTimestamp","parseFloat","id","hash","date","Date","year","month","day","hour","min","sec","setUTCFullYear","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","eval","R7gn","factory","self","hljs","value","node","nodeName","testRe","re","lexeme","index","isNotHighlighted","language","noHighlightRe","blockLanguage","_class","classes","className","parentNode","languagePrefixRe","getLanguage","inherit","parent","result","objects","Array","forEach","nodeStream","_nodeStream","offset","child","firstChild","nextSibling","nodeType","nodeValue","event","mergeStreams","original","highlighted","selectStream","open","attr_str","a","ArrayProto","map","attributes","close","render","processed","nodeStack","stream","splice","substr","expand_mode","mode","variants","cached_variants","variant","endsWithParent","compileLanguage","reStr","langRe","global","case_insensitive","compileMode","compiled","keywords","beginKeywords","compiled_keywords","flatten","kw","pair","Number","objectKeys","lexemesRe","lexemes","begin","beginRe","end","endRe","terminator_end","illegal","illegalRe","relevance","contains","concat","apply","c","starts","terminators","filter","Boolean","ignore_illegals","continuation","subMode","endOfMode","endsParent","isIllegal","keywordMatch","match_str","buildSpan","classname","insideSpan","leaveOpen","noPrefix","classPrefix","openSpan","closeSpan","spanEndTag","processKeywords","keyword_match","last_index","mode_buffer","lastIndex","processSubLanguage","explicit","subLanguage","languages","continuations","highlightAuto","undefined","processBuffer","startNewMode","create","processLexeme","buffer","new_mode","skip","excludeBegin","returnBegin","end_mode","origin","returnEnd","excludeEnd","current","count","languageSubset","second_best","fixMarkup","tabReplace","useBR","fixMarkupRe","p1","buildClassName","prevClassName","currentLang","resultLang","aliases","highlightBlock","originalStream","resultNode","document","createElementNS","innerHTML","textContent","configure","user_options","initHighlighting","called","blocks","querySelectorAll","initHighlightingOnLoad","addEventListener","registerLanguage","alias","listLanguages","keys","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","inherits","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","SESj","KEYWORDS","keyword","built_in","PROMPT","SUBST","STRING","NUMBER","PARAMS","T3qH","VAR","QUOTE_STRING","APOS_STRING","literal","T7Xh","builtin-name","SYMBOL_RE","SYMBOL","LITERAL","COLLECTION","HINT","HINT_COL","KEY","LIST","BODY","NAME","DEFAULT_CONTAINS","Yr+x","TEMPLATE_STRING","PARAMS_CONTAINS","f1ur","preact","parseMarkup","markup","doc","mime","parserError","wrappedMarkup","DOMParser","parseFromString","parserDoc","buildParserFrame","write","getElementsByTagName","fc","error","removeChild","lastChild","implementation","createHTMLDocument","frame","createElement","style","cssText","setAttribute","appendChild","contentWindow","toVdom","visitor","h","walk","EMPTY_OBJ$1","arr","isFirstOrLast","allowScripts","getProps","walkChildren","childNodes","attrs","props","_attrs$i","allowEvents","Function","children","exists","markupToVdom","reviver","dom","EMPTY_OBJ","vdom","toCamelCase","letter","toUpperCase","reduce","attrName","x","subClass","superClass","TypeError","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","objectWithoutProperties","possibleConstructorReturn","ReferenceError","customReviver","_Component","Markup","setReviver","shouldComponentUpdate","_ref","wrap","p","setComponents","components","_ref2","_ref2$wrap","onError","console","cl","Component","h6ac","g","rTxI","__webpack_exports__","_objectDestructuringEmpty","_possibleConstructorReturn","_inherits","parseContent","FRONT_MATTER_REG","frontMatter","meta","yaml_default","defineProperty","preact_min","yaml","marked_default","preact_markup","preact_markup_default","CACHE","OPTIONS","markdown_markdownToHtml","md","lib_markdown","markdown","config","config_default","loading","loading_default","highlight_default","javascript","javascript_default","python","python_default","bash","bash_default","clojure","clojure_default","haml","haml_default","d","article_Article","LANGUAGES","_ref4","Article","componentDidMount","_this2","params","article","articles","urlPreix","post_url","fetch","then","r","setState","componentDidUpdate","getAttribute","_ref3","_content","class","toUTCString","vQT+","zDR5","zGGx"],"mappings":"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","file":"route-article.chunk.7f784.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"3F7m\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function (root) {\n  'use strict';\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: noop,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n    nptable: noop,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noop,\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n    paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n    text: /^[^\\n]+/\n  };\n\n  block._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\n  block.item = edit(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n\n  block._tag = '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code' + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo' + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\n  block.html = edit(block.html).replace('comment', /<!--[\\s\\S]*?-->/).replace('closed', /<(tag)[\\s\\S]+?<\\/\\1>/).replace('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/).replace(/tag/g, block._tag).getRegex();\n\n  block.paragraph = edit(block.paragraph).replace('hr', block.hr).replace('heading', block.heading).replace('lheading', block.lheading).replace('tag', '<' + block._tag).getRegex();\n\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n    paragraph: /^/,\n    heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n  });\n\n  block.gfm.paragraph = edit(block.paragraph).replace('(?!', '(?!' + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|' + block.list.source.replace('\\\\1', '\\\\3') + '|').getRegex();\n\n  /**\n   * GFM + Tables Block Grammar\n   */\n\n  block.tables = merge({}, block.gfm, {\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n  });\n\n  /**\n   * Block Lexer\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = {};\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n\n    if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = block.tables;\n      } else {\n        this.rules = block.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n\n  Lexer.rules = block;\n\n  /**\n   * Static Lex Method\n   */\n\n  Lexer.lex = function (src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n\n  Lexer.prototype.lex = function (src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n\n  Lexer.prototype.token = function (src, top) {\n    src = src.replace(/^ +$/gm, '');\n    var next, loose, cap, bull, b, item, space, i, tag, l, isordered;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          text: !this.options.pedantic ? cap.replace(/\\n+$/, '') : cap\n        });\n        continue;\n      }\n\n      // fences (gfm)\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (top && (cap = this.rules.nptable.exec(src))) {\n        src = src.substring(cap[0].length);\n\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n\n        this.tokens.push({\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : ''\n        });\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (this.options.smartLists && i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          this.tokens.push({\n            type: loose ? 'loose_item_start' : 'list_item_start'\n          });\n\n          // Recurse.\n          this.token(item, false);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase();\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (top && (cap = this.rules.table.exec(src))) {\n        src = src.substring(cap[0].length);\n\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].replace(/^ *\\| *| *\\| *$/g, '').split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2] === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noop,\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,\n    link: /^!?\\[(inside)\\]\\(href\\)/,\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n    nolink: /^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n    em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n    code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n    br: /^ {2,}\\n(?!\\s*$)/,\n    del: noop,\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n  };\n\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n\n  inline._inside = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\n  inline.link = edit(inline.link).replace('inside', inline._inside).replace('href', inline._href).getRegex();\n\n  inline.reflink = edit(inline.reflink).replace('inside', inline._inside).getRegex();\n\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n  });\n\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/).replace('email', inline._email).getRegex(),\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n    text: edit(inline.text).replace(']|', '~]|').replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|').getRegex()\n  });\n\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n  });\n\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer();\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    } else if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n\n  InlineLexer.rules = inline;\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n\n  InlineLexer.output = function (src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n\n  /**\n   * Lexing/Compiling\n   */\n\n  InlineLexer.prototype.output = function (src) {\n    var out = '',\n        link,\n        text,\n        href,\n        cap;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += cap[1];\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        out += this.outputLink(cap, {\n          href: cap[2],\n          title: cap[3]\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  };\n\n  /**\n   * Compile Link\n   */\n\n  InlineLexer.prototype.outputLink = function (cap, link) {\n    var href = escape(link.href),\n        title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n  };\n\n  /**\n   * Smartypants Transformations\n   */\n\n  InlineLexer.prototype.smartypants = function (text) {\n    if (!this.options.smartypants) return text;\n    return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201C')\n    // closing doubles\n    .replace(/\"/g, '\\u201D')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n  };\n\n  /**\n   * Mangle Links\n   */\n\n  InlineLexer.prototype.mangle = function (text) {\n    if (!this.options.mangle) return text;\n    var out = '',\n        l = text.length,\n        i = 0,\n        ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  };\n\n  /**\n   * Renderer\n   */\n\n  function Renderer(options) {\n    this.options = options || {};\n  }\n\n  Renderer.prototype.code = function (code, lang, escaped) {\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>' + (escaped ? code : escape(code, true)) + '\\n</code></pre>';\n    }\n\n    return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? code : escape(code, true)) + '\\n</code></pre>\\n';\n  };\n\n  Renderer.prototype.blockquote = function (quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  Renderer.prototype.html = function (html) {\n    return html;\n  };\n\n  Renderer.prototype.heading = function (text, level, raw) {\n    return '<h' + level + ' id=\"' + this.options.headerPrefix + raw.toLowerCase().replace(/[^\\w]+/g, '-') + '\">' + text + '</h' + level + '>\\n';\n  };\n\n  Renderer.prototype.hr = function () {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  Renderer.prototype.list = function (body, ordered, start) {\n    var type = ordered ? 'ol' : 'ul',\n        startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  Renderer.prototype.listitem = function (text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  Renderer.prototype.paragraph = function (text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  Renderer.prototype.table = function (header, body) {\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + '<tbody>\\n' + body + '</tbody>\\n' + '</table>\\n';\n  };\n\n  Renderer.prototype.tablerow = function (content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  Renderer.prototype.tablecell = function (content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align ? '<' + type + ' style=\"text-align:' + flags.align + '\">' : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  Renderer.prototype.strong = function (text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  Renderer.prototype.em = function (text) {\n    return '<em>' + text + '</em>';\n  };\n\n  Renderer.prototype.codespan = function (text) {\n    return '<code>' + text + '</code>';\n  };\n\n  Renderer.prototype.br = function () {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  Renderer.prototype.del = function (text) {\n    return '<del>' + text + '</del>';\n  };\n\n  Renderer.prototype.link = function (href, title, text) {\n    if (this.options.sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n      } catch (e) {\n        return text;\n      }\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return text;\n      }\n    }\n    if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n      href = resolveUrl(this.options.baseUrl, href);\n    }\n    var out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  Renderer.prototype.image = function (href, title, text) {\n    if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n      href = resolveUrl(this.options.baseUrl, href);\n    }\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  Renderer.prototype.text = function (text) {\n    return text;\n  };\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  function TextRenderer() {}\n\n  // no need for block level renderers\n\n  TextRenderer.prototype.strong = TextRenderer.prototype.em = TextRenderer.prototype.codespan = TextRenderer.prototype.del = TextRenderer.prototype.text = function (text) {\n    return text;\n  };\n\n  TextRenderer.prototype.link = TextRenderer.prototype.image = function (href, title, text) {\n    return '' + text;\n  };\n\n  TextRenderer.prototype.br = function () {\n    return '';\n  };\n\n  /**\n   * Parsing & Compiling\n   */\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n  }\n\n  /**\n   * Static Parse Method\n   */\n\n  Parser.parse = function (src, options) {\n    var parser = new Parser(options);\n    return parser.parse(src);\n  };\n\n  /**\n   * Parse Loop\n   */\n\n  Parser.prototype.parse = function (src) {\n    this.inline = new InlineLexer(src.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(src.links, merge({}, this.options, { renderer: new TextRenderer() }));\n    this.tokens = src.reverse();\n\n    var out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n\n  Parser.prototype.next = function () {\n    return this.token = this.tokens.pop();\n  };\n\n  /**\n   * Preview Next Token\n   */\n\n  Parser.prototype.peek = function () {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n\n  Parser.prototype.parseText = function () {\n    var body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n\n  Parser.prototype.tok = function () {\n    switch (this.token.type) {\n      case 'space':\n        {\n          return '';\n        }\n      case 'hr':\n        {\n          return this.renderer.hr();\n        }\n      case 'heading':\n        {\n          return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, unescape(this.inlineText.output(this.token.text)));\n        }\n      case 'code':\n        {\n          return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n        }\n      case 'table':\n        {\n          var header = '',\n              body = '',\n              i,\n              row,\n              cell,\n              j;\n\n          // header\n          cell = '';\n          for (i = 0; i < this.token.header.length; i++) {\n            cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), { header: true, align: this.token.align[i] });\n          }\n          header += this.renderer.tablerow(cell);\n\n          for (i = 0; i < this.token.cells.length; i++) {\n            row = this.token.cells[i];\n\n            cell = '';\n            for (j = 0; j < row.length; j++) {\n              cell += this.renderer.tablecell(this.inline.output(row[j]), { header: false, align: this.token.align[j] });\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          return this.renderer.table(header, body);\n        }\n      case 'blockquote_start':\n        {\n          body = '';\n\n          while (this.next().type !== 'blockquote_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.blockquote(body);\n        }\n      case 'list_start':\n        {\n          body = '';\n          var ordered = this.token.ordered,\n              start = this.token.start;\n\n          while (this.next().type !== 'list_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.list(body, ordered, start);\n        }\n      case 'list_item_start':\n        {\n          body = '';\n\n          while (this.next().type !== 'list_item_end') {\n            body += this.token.type === 'text' ? this.parseText() : this.tok();\n          }\n\n          return this.renderer.listitem(body);\n        }\n      case 'loose_item_start':\n        {\n          body = '';\n\n          while (this.next().type !== 'list_item_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.listitem(body);\n        }\n      case 'html':\n        {\n          var html = !this.token.pre && !this.options.pedantic ? this.inline.output(this.token.text) : this.token.text;\n          return this.renderer.html(html);\n        }\n      case 'paragraph':\n        {\n          return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n      case 'text':\n        {\n          return this.renderer.paragraph(this.parseText());\n        }\n    }\n  };\n\n  /**\n   * Helpers\n   */\n\n  function escape(html, encode) {\n    return html.replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n  }\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n      return '';\n    });\n  }\n\n  function edit(regex, opt) {\n    regex = regex.source;\n    opt = opt || '';\n    return {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(/(^|[^\\[])\\^/g, '$1');\n        regex = regex.replace(name, val);\n        return this;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n  }\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n      }\n    }\n    base = baseUrls[' ' + base];\n\n    if (href.slice(0, 2) === '//') {\n      return base.replace(/:[\\s\\S]*/, ':') + href;\n    } else if (href.charAt(0) === '/') {\n      return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var baseUrls = {};\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function noop() {}\n  noop.exec = noop;\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n\n      var highlight = opt.highlight,\n          tokens,\n          pending,\n          i = 0;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      pending = tokens.length;\n\n      var done = function done(err) {\n        if (err) {\n          opt.highlight = highlight;\n          return callback(err);\n        }\n\n        var out;\n\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n\n        opt.highlight = highlight;\n\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!pending) return done();\n\n      for (; i < tokens.length; i++) {\n        (function (token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n          return highlight(token.text, token.lang, function (err, code) {\n            if (err) return done(err);\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n\n      return;\n    }\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n\n  marked.defaults = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    sanitizer: null,\n    mangle: true,\n    smartLists: false,\n    silent: false,\n    highlight: null,\n    langPrefix: 'lang-',\n    smartypants: false,\n    headerPrefix: '',\n    renderer: new Renderer(),\n    xhtml: false,\n    baseUrl: null\n  };\n\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n\n  marked.parse = marked;\n\n  if (true) {\n    module.exports = marked;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return marked;\n    });\n  } else {\n    root.marked = marked;\n  }\n})(this || (typeof window !== 'undefined' ? window : global));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"h6ac\")))\n\n/***/ }),\n\n/***/ \"Ipsp\":\n/***/ (function(module, exports) {\n\n// YAML - Core - Copyright TJ Holowaychuk <tj@vision-media.ca> (MIT Licensed)\n\n/**\n * Version triplet.\n */\n\nexports.version = '0.2.3';\n\n// --- Helpers\n\n/**\n * Return 'near \"context\"' where context\n * is replaced by a chunk of _str_.\n *\n * @param  {string} str\n * @return {string}\n * @api public\n */\n\nfunction context(str) {\n  if (typeof str !== 'string') return '';\n  str = str.slice(0, 25).replace(/\\n/g, '\\\\n').replace(/\"/g, '\\\\\\\"');\n  return 'near \"' + str + '\"';\n}\n\n// --- Lexer\n\n/**\n * YAML grammar tokens.\n */\n\nvar tokens = [['comment', /^#[^\\n]*/], ['indent', /^\\n( *)/], ['space', /^ +/], ['true', /^\\b(enabled|true|yes|on)\\b/], ['false', /^\\b(disabled|false|no|off)\\b/], ['null', /^\\b(null|Null|NULL|~)\\b/], ['string', /^\"(.*?)\"/], ['string', /^'(.*?)'/], ['timestamp', /^((\\d{4})-(\\d\\d?)-(\\d\\d?)(?:(?:[ \\t]+)(\\d\\d?):(\\d\\d)(?::(\\d\\d))?)?)/], ['float', /^(\\d+\\.\\d+)/], ['int', /^(\\d+)/], ['doc', /^---/], [',', /^,/], ['{', /^\\{(?![^\\n\\}]*\\}[^\\n]*[^\\s\\n\\}])/], ['}', /^\\}/], ['[', /^\\[(?![^\\n\\]]*\\][^\\n]*[^\\s\\n\\]])/], [']', /^\\]/], ['-', /^\\-/], [':', /^[:]/], ['string', /^(?![^:\\n\\s]*:[^\\/]{2})(([^:,\\]\\}\\n\\s]|(?!\\n)\\s(?!\\s*?\\n)|:\\/\\/|,(?=[^\\n]*\\s*[^\\]\\}\\s\\n]\\s*\\n)|[\\]\\}](?=[^\\n]*\\s*[^\\]\\}\\s\\n]\\s*\\n))*)(?=[,:\\]\\}\\s\\n]|$)/], ['id', /^([\\w][\\w -]*)/]];\n\n/**\n * Tokenize the given _str_.\n *\n * @param  {string} str\n * @return {array}\n * @api private\n */\n\nexports.tokenize = function (str) {\n  var token,\n      captures,\n      ignore,\n      input,\n      indents = 0,\n      lastIndents = 0,\n      stack = [],\n      indentAmount = -1;\n\n  // Windows new line support (CR+LF, \\r\\n)\n  str = str.replace(/\\r\\n/g, \"\\n\");\n\n  while (str.length) {\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      if (captures = tokens[i][1].exec(str)) {\n        token = [tokens[i][0], captures], str = str.replace(tokens[i][1], '');\n        switch (token[0]) {\n          case 'comment':\n            ignore = true;\n            break;\n          case 'indent':\n            lastIndents = indents;\n            // determine the indentation amount from the first indent\n            if (indentAmount == -1) {\n              indentAmount = token[1][1].length;\n            }\n\n            indents = token[1][1].length / indentAmount;\n            if (indents === lastIndents) ignore = true;else if (indents > lastIndents + 1) throw new SyntaxError('invalid indentation, got ' + indents + ' instead of ' + (lastIndents + 1));else if (indents < lastIndents) {\n              input = token[1].input;\n              token = ['dedent'];\n              token.input = input;\n              while (--lastIndents > indents) {\n                stack.push(token);\n              }\n            }\n        }\n        break;\n      }\n    }if (!ignore) if (token) stack.push(token), token = null;else throw new SyntaxError(context(str));\n    ignore = false;\n  }\n  return stack;\n};\n\n// --- Parser\n\n/**\n * Initialize with _tokens_.\n */\n\nfunction Parser(tokens) {\n  this.tokens = tokens;\n}\n\n/**\n * Look-ahead a single token.\n *\n * @return {array}\n * @api public\n */\n\nParser.prototype.peek = function () {\n  return this.tokens[0];\n};\n\n/**\n * Advance by a single token.\n *\n * @return {array}\n * @api public\n */\n\nParser.prototype.advance = function () {\n  return this.tokens.shift();\n};\n\n/**\n * Advance and return the token's value.\n *\n * @return {mixed}\n * @api private\n */\n\nParser.prototype.advanceValue = function () {\n  return this.advance()[1][1];\n};\n\n/**\n * Accept _type_ and advance or do nothing.\n *\n * @param  {string} type\n * @return {bool}\n * @api private\n */\n\nParser.prototype.accept = function (type) {\n  if (this.peekType(type)) return this.advance();\n};\n\n/**\n * Expect _type_ or throw an error _msg_.\n *\n * @param  {string} type\n * @param  {string} msg\n * @api private\n */\n\nParser.prototype.expect = function (type, msg) {\n  if (this.accept(type)) return;\n  throw new Error(msg + ', ' + context(this.peek()[1].input));\n};\n\n/**\n * Return the next token type.\n *\n * @return {string}\n * @api private\n */\n\nParser.prototype.peekType = function (val) {\n  return this.tokens[0] && this.tokens[0][0] === val;\n};\n\n/**\n * space*\n */\n\nParser.prototype.ignoreSpace = function () {\n  while (this.peekType('space')) {\n    this.advance();\n  }\n};\n\n/**\n * (space | indent | dedent)*\n */\n\nParser.prototype.ignoreWhitespace = function () {\n  while (this.peekType('space') || this.peekType('indent') || this.peekType('dedent')) {\n    this.advance();\n  }\n};\n\n/**\n *   block\n * | doc\n * | list\n * | inlineList\n * | hash\n * | inlineHash\n * | string\n * | float\n * | int\n * | true\n * | false\n * | null\n */\n\nParser.prototype.parse = function () {\n  switch (this.peek()[0]) {\n    case 'doc':\n      return this.parseDoc();\n    case '-':\n      return this.parseList();\n    case '{':\n      return this.parseInlineHash();\n    case '[':\n      return this.parseInlineList();\n    case 'id':\n      return this.parseHash();\n    case 'string':\n      return this.advanceValue();\n    case 'timestamp':\n      return this.parseTimestamp();\n    case 'float':\n      return parseFloat(this.advanceValue());\n    case 'int':\n      return parseInt(this.advanceValue());\n    case 'true':\n      this.advanceValue();return true;\n    case 'false':\n      this.advanceValue();return false;\n    case 'null':\n      this.advanceValue();return null;\n  }\n};\n\n/**\n * '---'? indent expr dedent\n */\n\nParser.prototype.parseDoc = function () {\n  this.accept('doc');\n  this.expect('indent', 'expected indent after document');\n  var val = this.parse();\n  this.expect('dedent', 'document not properly dedented');\n  return val;\n};\n\n/**\n *  ( id ':' - expr -\n *  | id ':' - indent expr dedent\n *  )+\n */\n\nParser.prototype.parseHash = function () {\n  var id,\n      hash = {};\n  while (this.peekType('id') && (id = this.advanceValue())) {\n    this.expect(':', 'expected semi-colon after id');\n    this.ignoreSpace();\n    if (this.accept('indent')) hash[id] = this.parse(), this.expect('dedent', 'hash not properly dedented');else hash[id] = this.parse();\n    this.ignoreSpace();\n  }\n  return hash;\n};\n\n/**\n * '{' (- ','? ws id ':' - expr ws)* '}'\n */\n\nParser.prototype.parseInlineHash = function () {\n  var hash = {},\n      id,\n      i = 0;\n  this.accept('{');\n  while (!this.accept('}')) {\n    this.ignoreSpace();\n    if (i) this.expect(',', 'expected comma');\n    this.ignoreWhitespace();\n    if (this.peekType('id') && (id = this.advanceValue())) {\n      this.expect(':', 'expected semi-colon after id');\n      this.ignoreSpace();\n      hash[id] = this.parse();\n      this.ignoreWhitespace();\n    }\n    ++i;\n  }\n  return hash;\n};\n\n/**\n *  ( '-' - expr -\n *  | '-' - indent expr dedent\n *  )+\n */\n\nParser.prototype.parseList = function () {\n  var list = [];\n  while (this.accept('-')) {\n    this.ignoreSpace();\n    if (this.accept('indent')) list.push(this.parse()), this.expect('dedent', 'list item not properly dedented');else list.push(this.parse());\n    this.ignoreSpace();\n  }\n  return list;\n};\n\n/**\n * '[' (- ','? - expr -)* ']'\n */\n\nParser.prototype.parseInlineList = function () {\n  var list = [],\n      i = 0;\n  this.accept('[');\n  while (!this.accept(']')) {\n    this.ignoreSpace();\n    if (i) this.expect(',', 'expected comma');\n    this.ignoreSpace();\n    list.push(this.parse());\n    this.ignoreSpace();\n    ++i;\n  }\n  return list;\n};\n\n/**\n * yyyy-mm-dd hh:mm:ss\n *\n * For full format: http://yaml.org/type/timestamp.html\n */\n\nParser.prototype.parseTimestamp = function () {\n  var token = this.advance()[1];\n  var date = new Date();\n  var year = token[2],\n      month = token[3],\n      day = token[4],\n      hour = token[5] || 0,\n      min = token[6] || 0,\n      sec = token[7] || 0;\n\n  date.setUTCFullYear(year, month - 1, day);\n  date.setUTCHours(hour);\n  date.setUTCMinutes(min);\n  date.setUTCSeconds(sec);\n  date.setUTCMilliseconds(0);\n  return date;\n};\n\n/**\n * Evaluate a _str_ of yaml.\n *\n * @param  {string} str\n * @return {mixed}\n * @api public\n */\n\nexports.eval = function (str) {\n  return new Parser(exports.tokenize(str)).parse();\n};\n\n/***/ }),\n\n/***/ \"R7gn\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function (factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window || typeof self === 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if (true) {\n    factory(exports);\n  } else if (globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if (typeof define === 'function' && define.amd) {\n      define([], function () {\n        return globalObject.hljs;\n      });\n    }\n  }\n})(function (hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys;\n\n  // Global internal variables used within the highlight.js library.\n  var languages = {},\n      aliases = {};\n\n  // Regular expressions used throughout the highlight.js library.\n  var noHighlightRe = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm;\n\n  var spanEndTag = '</span>';\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = languagePrefixRe.exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i];\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent) {\n    // inherit(parent, override_obj, override_obj, ...)\n    var key;\n    var result = {};\n    var objects = Array.prototype.slice.call(arguments, 1);\n\n    for (key in parent) {\n      result[key] = parent[key];\n    }objects.forEach(function (obj) {\n      for (key in obj) {\n        result[key] = obj[key];\n      }\n    });\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3) offset += child.nodeValue.length;else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset !== highlighted[0].offset) {\n        return original[0].offset < highlighted[0].offset ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n       if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n       ... which is collapsed to:\n      */\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {\n        return ' ' + a.nodeName + '=\"' + escape(a.value).replace('\"', '&quot;') + '\"';\n      }\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substring(processed, stream[0].offset));\n      processed = stream[0].offset;\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function expand_mode(mode) {\n    if (mode.variants && !mode.cached_variants) {\n      mode.cached_variants = mode.variants.map(function (variant) {\n        return inherit(mode, { variants: null }, variant);\n      });\n    }\n    return mode.cached_variants || mode.endsWithParent && [inherit(mode)] || [mode];\n  }\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n      return re && re.source || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(reStr(value), 'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : ''));\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled) return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function flatten(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function (kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') {\n          // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin) mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n        if (mode.end) mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end) mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal) mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null) mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      mode.contains = Array.prototype.concat.apply([], mode.contains.map(function (c) {\n        return expand_mode(c === 'self' ? mode : c);\n      }));\n      mode.contains.forEach(function (c) {\n        compileMode(c, mode);\n      });\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators = mode.contains.map(function (c) {\n        return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n      }).concat([mode.terminator_end, mode.illegal]).map(reStr).filter(Boolean);\n      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : { exec: function exec() /*s*/{\n          return null;\n        } };\n    }\n\n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n   - relevance (int)\n  - value (an HTML string with highlighting markup)\n   */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan = '<span class=\"' + classPrefix,\n          closeSpan = leaveOpen ? '' : spanEndTag;\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n\n      if (!top.keywords) return escape(mode_buffer);\n\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substring(last_index, match.index));\n        keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ? highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) : highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += top.subLanguage != null ? processSubLanguage() : processKeywords();\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className ? buildSpan(mode.className, '', true) : '';\n      top = Object.create(mode, { parent: { value: top } });\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n          if (!top.skip) {\n            relevance += top.relevance;\n          }\n          top = top.parent;\n        } while (top !== end_mode.parent);\n        if (end_mode.starts) {\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top)) throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '',\n        current;\n    for (current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match,\n          count,\n          index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match) break;\n        count = processLexeme(value.substring(index, match.index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for (current = top; current.parent; current = current.parent) {\n        // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n   - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n   */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).forEach(function (name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n   - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n   */\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR) ? value : value.replace(fixMarkupRe, function (match, p1) {\n      if (options.useBR && match === '\\n') {\n        return '<br>';\n      } else if (options.tabReplace) {\n        return p1.replace(/\\t/g, options.tabReplace);\n      }\n      return '';\n    });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n\n    if (isNotHighlighted(language)) return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    originalStream = nodeStream(node);\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called) return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    if (lang.aliases) {\n      lang.aliases.forEach(function (alias) {\n        aliases[alias] = name;\n      });\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit({\n      className: 'comment',\n      begin: begin, end: end,\n      contains: []\n    }, inherits || {});\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' + '%|em|ex|ch|rem' + '|vw|vh|vmin|vmax' + '|cm|mm|in|pt|pc|px' + '|deg|grad|rad|turn' + '|s|ms' + '|Hz|kHz' + '|dpi|dpcm|dppx' + ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [hljs.BACKSLASH_ESCAPE, {\n      begin: /\\[/, end: /\\]/,\n      relevance: 0,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  return hljs;\n});\n\n/***/ }),\n\n/***/ \"SESj\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (hljs) {\n  var KEYWORDS = {\n    keyword: 'and elif is global as in if from raise for except finally print import pass return ' + 'exec else break not with class assert yield try while continue del or def lambda ' + 'async await nonlocal|10 None True False',\n    built_in: 'Ellipsis NotImplemented'\n  };\n  var PROMPT = {\n    className: 'meta', begin: /^(>>>|\\.\\.\\.) /\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: /\\{/, end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [{\n      begin: /(u|b)?r?'''/, end: /'''/,\n      contains: [PROMPT],\n      relevance: 10\n    }, {\n      begin: /(u|b)?r?\"\"\"/, end: /\"\"\"/,\n      contains: [PROMPT],\n      relevance: 10\n    }, {\n      begin: /(fr|rf|f)'''/, end: /'''/,\n      contains: [PROMPT, SUBST]\n    }, {\n      begin: /(fr|rf|f)\"\"\"/, end: /\"\"\"/,\n      contains: [PROMPT, SUBST]\n    }, {\n      begin: /(u|r|ur)'/, end: /'/,\n      relevance: 10\n    }, {\n      begin: /(u|r|ur)\"/, end: /\"/,\n      relevance: 10\n    }, {\n      begin: /(b|br)'/, end: /'/\n    }, {\n      begin: /(b|br)\"/, end: /\"/\n    }, {\n      begin: /(fr|rf|f)'/, end: /'/,\n      contains: [SUBST]\n    }, {\n      begin: /(fr|rf|f)\"/, end: /\"/,\n      contains: [SUBST]\n    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]\n  };\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [{ begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?' }, { begin: '\\\\b(0o[0-7]+)[lLjJ]?' }, { begin: hljs.C_NUMBER_RE + '[lLjJ]?' }]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    contains: ['self', PROMPT, NUMBER, STRING]\n  };\n  SUBST.contains = [STRING, NUMBER, PROMPT];\n  return {\n    aliases: ['py', 'gyp'],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [PROMPT, NUMBER, STRING, hljs.HASH_COMMENT_MODE, {\n      variants: [{ className: 'function', beginKeywords: 'def' }, { className: 'class', beginKeywords: 'class' }],\n      end: /:/,\n      illegal: /[${=;\\n,]/,\n      contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS, {\n        begin: /->/, endsWithParent: true,\n        keywords: 'None'\n      }]\n    }, {\n      className: 'meta',\n      begin: /^[\\t ]*@/, end: /$/\n    }, {\n      begin: /\\b(print|exec)\\(/ // don’t highlight keywords-turned-functions in Python 3\n    }]\n  };\n};\n\n/***/ }),\n\n/***/ \"T3qH\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (hljs) {\n  var VAR = {\n    className: 'variable',\n    variants: [{ begin: /\\$[\\w\\d#@][\\w\\d_]*/ }, { begin: /\\$\\{(.*?)}/ }]\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [hljs.BACKSLASH_ESCAPE, VAR, {\n      className: 'variable',\n      begin: /\\$\\(/, end: /\\)/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }]\n  };\n  var APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n\n  return {\n    aliases: ['sh', 'zsh'],\n    lexemes: /\\b-?[a-z\\._]+\\b/,\n    keywords: {\n      keyword: 'if then else elif fi for while in do done case esac function',\n      literal: 'true false',\n      built_in:\n      // Shell built-ins\n      // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' + 'trap umask unset ' +\n      // Bash built-ins\n      'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' + 'read readarray source type typeset ulimit unalias ' +\n      // Shell modifiers\n      'set shopt ' +\n      // Zsh built-ins\n      'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' + 'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' + 'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' + 'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' + 'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' + 'zpty zregexparse zsocket zstyle ztcp',\n      _: '-ne -eq -lt -gt -f -d -e -s -l -a' // relevance booster\n    },\n    contains: [{\n      className: 'meta',\n      begin: /^#![^\\n]+sh\\s*$/,\n      relevance: 10\n    }, {\n      className: 'function',\n      begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n      returnBegin: true,\n      contains: [hljs.inherit(hljs.TITLE_MODE, { begin: /\\w[\\w\\d_]*/ })],\n      relevance: 0\n    }, hljs.HASH_COMMENT_MODE, QUOTE_STRING, APOS_STRING, VAR]\n  };\n};\n\n/***/ }),\n\n/***/ \"T7Xh\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (hljs) {\n  var keywords = {\n    'builtin-name':\n    // Clojure keywords\n    'def defonce cond apply if-not if-let if not not= = < > <= >= == + / * - rem ' + 'quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? ' + 'set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? ' + 'class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? ' + 'string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . ' + 'inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last ' + 'drop-while while intern condp case reduced cycle split-at split-with repeat replicate ' + 'iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext ' + 'nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends ' + 'add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler ' + 'set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter ' + 'monitor-exit defmacro defn defn- macroexpand macroexpand-1 for dosync and or ' + 'when when-not when-let comp juxt partial sequence memoize constantly complement identity assert ' + 'peek pop doto proxy defstruct first rest cons defprotocol cast coll deftype defrecord last butlast ' + 'sigs reify second ffirst fnext nfirst nnext defmulti defmethod meta with-meta ns in-ns create-ns import ' + 'refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! ' + 'assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger ' + 'bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline ' + 'flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking ' + 'assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! ' + 'reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! ' + 'new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty ' + 'hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list ' + 'disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer ' + 'chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate ' + 'unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta ' + 'lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize'\n  };\n\n  var SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  var SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n  var SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  var NUMBER = {\n    className: 'number', begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\n  var COMMENT = hljs.COMMENT(';', '$', {\n    relevance: 0\n  });\n  var LITERAL = {\n    className: 'literal',\n    begin: /\\b(true|false|nil)\\b/\n  };\n  var COLLECTION = {\n    begin: '[\\\\[\\\\{]', end: '[\\\\]\\\\}]'\n  };\n  var HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  var HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  var KEY = {\n    className: 'symbol',\n    begin: '[:]{1,2}' + SYMBOL_RE\n  };\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  var NAME = {\n    keywords: keywords,\n    lexemes: SYMBOL_RE,\n    className: 'name', begin: SYMBOL_RE,\n    starts: BODY\n  };\n  var DEFAULT_CONTAINS = [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL, SYMBOL];\n\n  LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n  HINT_COL.contains = [COLLECTION];\n\n  return {\n    aliases: ['clj'],\n    illegal: /\\S/,\n    contains: [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL]\n  };\n};\n\n/***/ }),\n\n/***/ \"Yr+x\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (hljs) {\n  var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword: 'in of if for while finally var new function do return void else break catch ' + 'instanceof with throw case default try this switch continue typeof delete ' + 'let yield const export super debugger as async await static ' +\n    // ECMAScript 6 modules import\n    'import from as',\n\n    literal: 'true false null undefined NaN Infinity',\n    built_in: 'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' + 'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' + 'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' + 'TypeError URIError Number Math Date String RegExp Array Float32Array ' + 'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' + 'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' + 'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' + 'Promise'\n  };\n  var EXPRESSIONS;\n  var NUMBER = {\n    className: 'number',\n    variants: [{ begin: '\\\\b(0[bB][01]+)' }, { begin: '\\\\b(0[oO][0-7]+)' }, { begin: hljs.C_NUMBER_RE }],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: [] // defined later\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n  };\n  SUBST.contains = [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, TEMPLATE_STRING, NUMBER, hljs.REGEXP_MODE];\n  var PARAMS_CONTAINS = SUBST.contains.concat([hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE]);\n\n  return {\n    aliases: ['js', 'jsx'],\n    keywords: KEYWORDS,\n    contains: [{\n      className: 'meta',\n      relevance: 10,\n      begin: /^\\s*['\"]use (strict|asm)['\"]/\n    }, {\n      className: 'meta',\n      begin: /^#!/, end: /$/\n    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, TEMPLATE_STRING, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBER, { // object attr container\n      begin: /[{,]\\s*/, relevance: 0,\n      contains: [{\n        begin: IDENT_RE + '\\\\s*:', returnBegin: true,\n        relevance: 0,\n        contains: [{ className: 'attr', begin: IDENT_RE, relevance: 0 }]\n      }]\n    }, { // \"value\" container\n      begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n      keywords: 'return throw case',\n      contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.REGEXP_MODE, {\n        className: 'function',\n        begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>', returnBegin: true,\n        end: '\\\\s*=>',\n        contains: [{\n          className: 'params',\n          variants: [{\n            begin: IDENT_RE\n          }, {\n            begin: /\\(\\s*\\)/\n          }, {\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true, excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: PARAMS_CONTAINS\n          }]\n        }]\n      }, { // E4X / JSX\n        begin: /</, end: /(\\/\\w+|\\w+\\/)>/,\n        subLanguage: 'xml',\n        contains: [{ begin: /<\\w+\\s*\\/>/, skip: true }, {\n          begin: /<\\w+/, end: /(\\/\\w+|\\w+\\/)>/, skip: true,\n          contains: [{ begin: /<\\w+\\s*\\/>/, skip: true }, 'self']\n        }]\n      }],\n      relevance: 0\n    }, {\n      className: 'function',\n      beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n      contains: [hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE }), {\n        className: 'params',\n        begin: /\\(/, end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        contains: PARAMS_CONTAINS\n      }],\n      illegal: /\\[|%/\n    }, {\n      begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n    }, hljs.METHOD_GUARD, { // ES6 class\n      className: 'class',\n      beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n      illegal: /[:\"\\[\\]]/,\n      contains: [{ beginKeywords: 'extends' }, hljs.UNDERSCORE_TITLE_MODE]\n    }, {\n      beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n    }],\n    illegal: /#(?!!)/\n  };\n};\n\n/***/ }),\n\n/***/ \"f1ur\":\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(\"KM04\")) : typeof define === 'function' && define.amd ? define(['preact'], factory) : global.preactMarkup = factory(global.preact);\n})(this, function (preact) {\n  'use strict';\n\n  var parserDoc = void 0;\n\n  function parseMarkup(markup, type) {\n    var doc = void 0,\n        mime = type === 'html' ? 'text/html' : 'application/xml',\n        parserError = void 0,\n        wrappedMarkup = void 0,\n        tag = void 0;\n\n    if (type === 'html') {\n      tag = 'body';\n      wrappedMarkup = '<!DOCTYPE html>\\n<html><body>' + markup + '</body></html>';\n    } else {\n      tag = 'xml';\n      wrappedMarkup = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>' + markup + '</xml>';\n    }\n\n    try {\n      doc = new DOMParser().parseFromString(wrappedMarkup, mime);\n    } catch (err) {\n      parserError = err;\n    }\n\n    if (!doc && type === 'html') {\n      doc = parserDoc || (parserDoc = buildParserFrame());\n      doc.open();\n      doc.write(wrappedMarkup);\n      doc.close();\n    }\n\n    if (!doc) return;\n\n    var out = doc.getElementsByTagName(tag)[0],\n        fc = out.firstChild;\n\n    if (markup && !fc) {\n      out.error = 'Document parse failed.';\n    }\n\n    if (fc && String(fc.nodeName).toLowerCase() === 'parsererror') {\n      fc.removeChild(fc.firstChild);\n      fc.removeChild(fc.lastChild);\n      out.error = fc.textContent || fc.nodeValue || parserError || 'Unknown error';\n\n      out.removeChild(fc);\n    }\n\n    return out;\n  }\n\n  function buildParserFrame() {\n    if (document.implementation && document.implementation.createHTMLDocument) {\n      return document.implementation.createHTMLDocument('');\n    }\n    var frame = document.createElement('iframe');\n    frame.style.cssText = 'position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;';\n    frame.setAttribute('sandbox', 'allow-forms');\n    document.body.appendChild(frame);\n    return frame.contentWindow.document;\n  }\n\n  var EMPTY_OBJ$1 = {};\n\n  function toVdom(node, visitor, h, options) {\n    walk.visitor = visitor;\n    walk.h = h;\n    walk.options = options || EMPTY_OBJ$1;\n    return walk(node);\n  }\n\n  function walk(n, index, arr) {\n    if (n.nodeType === 3) {\n      var text = 'textContent' in n ? n.textContent : n.nodeValue || '';\n\n      if (walk.options.trim !== false) {\n        var isFirstOrLast = index === 0 || index === arr.length - 1;\n\n        if (text.match(/^[\\s\\n]+$/g) && walk.options.trim !== 'all') {\n          text = ' ';\n        } else {\n          text = text.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g, walk.options.trim === 'all' || isFirstOrLast ? '' : ' ');\n        }\n\n        if ((!text || text === ' ') && arr.length > 1 && isFirstOrLast) return null;\n      }\n      return text;\n    }\n    if (n.nodeType !== 1) return null;\n    var nodeName = String(n.nodeName).toLowerCase();\n\n    if (nodeName === 'script' && !walk.options.allowScripts) return null;\n\n    var out = walk.h(nodeName, getProps(n.attributes), walkChildren(n.childNodes));\n    if (walk.visitor) walk.visitor(out);\n    return out;\n  }\n\n  function getProps(attrs) {\n    var len = attrs && attrs.length;\n    if (!len) return null;\n    var props = {};\n    for (var i = 0; i < len; i++) {\n      var _attrs$i = attrs[i];\n      var name = _attrs$i.name;\n      var value = _attrs$i.value;\n\n      if (value === '') value = true;\n      if (name.substring(0, 2) === 'on' && walk.options.allowEvents) {\n        value = new Function(value);\n      }\n      props[name] = value;\n    }\n    return props;\n  }\n\n  function walkChildren(children) {\n    var c = children && Array.prototype.map.call(children, walk).filter(exists);\n    return c && c.length ? c : null;\n  }\n\n  var exists = function exists(x) {\n    return x;\n  };\n\n  var EMPTY_OBJ = {};\n\n  function markupToVdom(markup, type, reviver, map, options) {\n    var dom = parseMarkup(markup, type);\n\n    if (dom && dom.error) {\n      throw new Error(dom.error);\n    }\n\n    var body = dom && dom.body || dom;\n    visitor.map = map || EMPTY_OBJ;\n    var vdom = body && toVdom(body, visitor, reviver, options);\n    visitor.map = null;\n\n    return vdom && vdom.children || null;\n  }\n\n  function toCamelCase(name) {\n    return name.replace(/-(.)/g, function (match, letter) {\n      return letter.toUpperCase();\n    });\n  }\n\n  function visitor(node) {\n    var name = node.nodeName.toLowerCase(),\n        map = visitor.map;\n    if (map && map.hasOwnProperty(name)) {\n      node.nodeName = map[name];\n      node.attributes = Object.keys(node.attributes || {}).reduce(function (attrs, attrName) {\n        attrs[toCamelCase(attrName)] = node.attributes[attrName];\n        return attrs;\n      }, {});\n    } else {\n      node.nodeName = name.replace(/[^a-z0-9-]/i, '');\n    }\n  }\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var inherits = function inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  };\n\n  var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var customReviver = void 0;\n\n  var Markup = function (_Component) {\n    inherits(Markup, _Component);\n\n    function Markup() {\n      classCallCheck(this, Markup);\n      return possibleConstructorReturn(this, _Component.apply(this, arguments));\n    }\n\n    Markup.setReviver = function setReviver(h) {\n      customReviver = h;\n    };\n\n    Markup.prototype.shouldComponentUpdate = function shouldComponentUpdate(_ref) {\n      var wrap = _ref.wrap;\n      var type = _ref.type;\n      var markup = _ref.markup;\n\n      var p = this.props;\n      return wrap !== p.wrap || type !== p.type || markup !== p.markup;\n    };\n\n    Markup.prototype.setComponents = function setComponents(components) {\n      this.map = {};\n      if (components) {\n        for (var i in components) {\n          if (components.hasOwnProperty(i)) {\n            var name = i.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g, '$1$3-$2$4').toLowerCase();\n            this.map[name] = components[i];\n          }\n        }\n      }\n    };\n\n    Markup.prototype.render = function render(_ref2) {\n      var _ref2$wrap = _ref2.wrap;\n      var wrap = _ref2$wrap === undefined ? true : _ref2$wrap;\n      var type = _ref2.type;\n      var markup = _ref2.markup;\n      var components = _ref2.components;\n      var reviver = _ref2.reviver;\n      var onError = _ref2.onError;\n      var allowScripts = _ref2['allow-scripts'];\n      var allowEvents = _ref2['allow-events'];\n      var trim = _ref2.trim;\n      var props = objectWithoutProperties(_ref2, ['wrap', 'type', 'markup', 'components', 'reviver', 'onError', 'allow-scripts', 'allow-events', 'trim']);\n\n      var h = reviver || this.reviver || this.constructor.prototype.reviver || customReviver || preact.h,\n          vdom = void 0;\n\n      this.setComponents(components);\n\n      var options = {\n        allowScripts: allowScripts,\n        allowEvents: allowEvents,\n        trim: trim\n      };\n\n      try {\n        vdom = markupToVdom(markup, type, h, this.map, options);\n      } catch (error) {\n        if (onError) {\n          onError({ error: error });\n        } else if (typeof console !== 'undefined' && console.error) {\n          console.error('preact-markup: ' + error);\n        }\n      }\n\n      if (wrap === false) return vdom && vdom[0] || null;\n\n      var c = props.hasOwnProperty('className') ? 'className' : 'class',\n          cl = props[c];\n      if (!cl) props[c] = 'markup';else if (cl.splice) cl.splice(0, 0, 'markup');else if (typeof cl === 'string') props[c] += ' markup';else if (typeof cl === 'object') cl.markup = true;\n\n      return h('div', props, vdom || null);\n    };\n\n    return Markup;\n  }(preact.Component);\n\n  return Markup;\n});\n//# sourceMappingURL=preact-markup.js.map\n\n/***/ }),\n\n/***/ \"h6ac\":\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ }),\n\n/***/ \"rTxI\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ../node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"KM04\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ../node_modules/yaml/lib/yaml.js\nvar yaml = __webpack_require__(\"Ipsp\");\nvar yaml_default = /*#__PURE__*/__webpack_require__.n(yaml);\n\n// EXTERNAL MODULE: ../node_modules/marked/lib/marked.js\nvar marked = __webpack_require__(\"3F7m\");\nvar marked_default = /*#__PURE__*/__webpack_require__.n(marked);\n\n// EXTERNAL MODULE: ../node_modules/preact-markup/dist/preact-markup.js\nvar preact_markup = __webpack_require__(\"f1ur\");\nvar preact_markup_default = /*#__PURE__*/__webpack_require__.n(preact_markup);\n\n// CONCATENATED MODULE: ./lib/markdown.js\n\n\n\n\n// Cache of markdown to generated html\nvar CACHE = {};\n\n// Marked options (See https://github.com/chjj/marked#options-1)\nvar OPTIONS = {\n\t// sanitize: true\n};\n\n// Convert Markdown to HTML using Marked\nvar markdown_markdownToHtml = function markdownToHtml(md) {\n\treturn CACHE[md] || (CACHE[md] = marked_default()(md, OPTIONS));\n};\n\n/** Component that renders Markdown to HTML via VDOM, using preact-markup.\n *\t@param props.markdown\tMarkdown string to render.\n *\t@returns VNode\n */\n/* harmony default export */ var lib_markdown = (function (_ref) {\n\tvar markdown = _ref.markdown;\n\n\tvar markup = markdown_markdownToHtml(markdown);\n\treturn Object(preact_min[\"h\"])(preact_markup_default.a, { markup: markup, trim: true, type: 'html' });\n});\n// EXTERNAL MODULE: ./config.json\nvar config = __webpack_require__(\"MmR0\");\nvar config_default = /*#__PURE__*/__webpack_require__.n(config);\n\n// EXTERNAL MODULE: ./routes/loading.gif\nvar loading = __webpack_require__(\"zDR5\");\nvar loading_default = /*#__PURE__*/__webpack_require__.n(loading);\n\n// EXTERNAL MODULE: ../node_modules/highlight.js/lib/highlight.js\nvar highlight = __webpack_require__(\"R7gn\");\nvar highlight_default = /*#__PURE__*/__webpack_require__.n(highlight);\n\n// EXTERNAL MODULE: ../node_modules/highlight.js/lib/languages/javascript.js\nvar javascript = __webpack_require__(\"Yr+x\");\nvar javascript_default = /*#__PURE__*/__webpack_require__.n(javascript);\n\n// EXTERNAL MODULE: ../node_modules/highlight.js/lib/languages/python.js\nvar python = __webpack_require__(\"SESj\");\nvar python_default = /*#__PURE__*/__webpack_require__.n(python);\n\n// EXTERNAL MODULE: ../node_modules/highlight.js/lib/languages/bash.js\nvar bash = __webpack_require__(\"T3qH\");\nvar bash_default = /*#__PURE__*/__webpack_require__.n(bash);\n\n// EXTERNAL MODULE: ../node_modules/highlight.js/lib/languages/clojure.js\nvar clojure = __webpack_require__(\"T7Xh\");\nvar clojure_default = /*#__PURE__*/__webpack_require__.n(clojure);\n\n// EXTERNAL MODULE: ../node_modules/highlight.js/lib/languages/haml.js\nvar haml = __webpack_require__(\"zGGx\");\nvar haml_default = /*#__PURE__*/__webpack_require__.n(haml);\n\n// EXTERNAL MODULE: ../node_modules/highlight.js/styles/atom-one-dark.css\nvar atom_one_dark = __webpack_require__(\"vQT+\");\nvar atom_one_dark_default = /*#__PURE__*/__webpack_require__.n(atom_one_dark);\n\n// CONCATENATED MODULE: ../node_modules/babel-loader/lib??ref--0!./routes/article.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return article_Article; });\n\n\nfunction _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError(\"Cannot destructure undefined\"); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar FRONT_MATTER_REG = /^\\s*---\\n\\s*([\\s\\S]*?)\\s*\\n---\\n/i;\nvar LANGUAGES = { javascript: javascript_default.a, python: python_default.a, bash: bash_default.a, clojure: clojure_default.a, html: haml_default.a };\nObject.keys(LANGUAGES).forEach(function (key) {\n\treturn highlight_default.a.registerLanguage(key, LANGUAGES[key]);\n});\n\nfunction parseContent(text) {\n\tvar _ref = text.match(FRONT_MATTER_REG) || [],\n\t    frontMatter = _ref[1],\n\t    meta = frontMatter && yaml_default.a.eval('---\\n' + frontMatter.replace(/^/gm, '  ') + '\\n') || {},\n\t    content = text.replace(FRONT_MATTER_REG, '');\n\n\treturn { meta: meta, content: content };\n}\n\nvar _ref4 = Object(preact_min[\"h\"])('img', { src: loading_default.a });\n\nvar article_Article = function (_Component) {\n\t_inherits(Article, _Component);\n\n\tfunction Article() {\n\t\t_classCallCheck(this, Article);\n\n\t\treturn _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t}\n\n\tArticle.prototype.componentDidMount = function componentDidMount() {\n\t\tvar _this2 = this;\n\n\t\tvar name = this.props.match.params.name;\n\t\tvar article = config_default.a.articles.filter(function (item) {\n\t\t\treturn item.name === name;\n\t\t});\n\t\tarticle = article && article[0];\n\t\tvar urlPreix =  true ? config_default.a.post_url : 'http://localhost:8000/';\n\t\tfetch('' + urlPreix + article.url).then(function (r) {\n\t\t\treturn r.text();\n\t\t}).then(function (r) {\n\t\t\t_this2.setState(parseContent(r));\n\t\t});\n\t};\n\n\tArticle.prototype.componentDidUpdate = function componentDidUpdate() {\n\t\tdocument.querySelectorAll('pre code').forEach(function (item) {\n\t\t\tvar lang = item.getAttribute('class').match(/lang-([a-z]+)/)[1],\n\t\t\t    highlighted = highlight_default.a.highlightAuto(item.textContent);\n\t\t\titem.setAttribute('class', 'hljs lang-' + lang);\n\t\t\titem.innerHTML = highlighted.value;\n\t\t});\n\t};\n\n\tArticle.prototype.render = function render(_ref2, _ref3) {\n\t\tvar meta = _ref3.meta,\n\t\t    content = _ref3.content;\n\n\t\t_objectDestructuringEmpty(_ref2);\n\n\t\tvar _content = content ? Object(preact_min[\"h\"])(lib_markdown, { markdown: content }) : _ref4;\n\t\treturn Object(preact_min[\"h\"])(\n\t\t\t'div',\n\t\t\t{ 'class': 'page-content' },\n\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t'div',\n\t\t\t\t{ 'class': 'wrapper' },\n\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ 'class': 'post' },\n\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t'header',\n\t\t\t\t\t\t{ 'class': 'post-header' },\n\t\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t\t'h1',\n\t\t\t\t\t\t\t{ 'class': 'post-title' },\n\t\t\t\t\t\t\tmeta && meta.title\n\t\t\t\t\t\t),\n\t\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t\t'p',\n\t\t\t\t\t\t\t{ 'class': 'post-meta' },\n\t\t\t\t\t\t\tmeta && meta.date.toUTCString()\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t\t'article',\n\t\t\t\t\t\t{ 'class': 'post-content' },\n\t\t\t\t\t\t_content\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t};\n\n\treturn Article;\n}(preact_min[\"Component\"]);\n\n\n\n/***/ }),\n\n/***/ \"vQT+\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"zDR5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"d9493fac92bfdcf18a413a26861fb2fd.gif\";\n\n/***/ }),\n\n/***/ \"zGGx\":\n/***/ (function(module, exports) {\n\nmodule.exports = // TODO support filter tags like :javascript, support inline HTML\nfunction (hljs) {\n  return {\n    case_insensitive: true,\n    contains: [{\n      className: 'meta',\n      begin: '^!!!( (5|1\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\b.*))?$',\n      relevance: 10\n    },\n    // FIXME these comments should be allowed to span indented lines\n    hljs.COMMENT('^\\\\s*(!=#|=#|-#|/).*$', false, {\n      relevance: 0\n    }), {\n      begin: '^\\\\s*(-|=|!=)(?!#)',\n      starts: {\n        end: '\\\\n',\n        subLanguage: 'ruby'\n      }\n    }, {\n      className: 'tag',\n      begin: '^\\\\s*%',\n      contains: [{\n        className: 'selector-tag',\n        begin: '\\\\w+'\n      }, {\n        className: 'selector-id',\n        begin: '#[\\\\w-]+'\n      }, {\n        className: 'selector-class',\n        begin: '\\\\.[\\\\w-]+'\n      }, {\n        begin: '{\\\\s*',\n        end: '\\\\s*}',\n        contains: [{\n          begin: ':\\\\w+\\\\s*=>',\n          end: ',\\\\s+',\n          returnBegin: true,\n          endsWithParent: true,\n          contains: [{\n            className: 'attr',\n            begin: ':\\\\w+'\n          }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, {\n            begin: '\\\\w+',\n            relevance: 0\n          }]\n        }]\n      }, {\n        begin: '\\\\(\\\\s*',\n        end: '\\\\s*\\\\)',\n        excludeEnd: true,\n        contains: [{\n          begin: '\\\\w+\\\\s*=',\n          end: '\\\\s+',\n          returnBegin: true,\n          endsWithParent: true,\n          contains: [{\n            className: 'attr',\n            begin: '\\\\w+',\n            relevance: 0\n          }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, {\n            begin: '\\\\w+',\n            relevance: 0\n          }]\n        }]\n      }]\n    }, {\n      begin: '^\\\\s*[=~]\\\\s*'\n    }, {\n      begin: '#{',\n      starts: {\n        end: '}',\n        subLanguage: 'ruby'\n      }\n    }]\n  };\n};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-article.chunk.7f784.js","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = edit(block.html)\n  .replace('comment', /<!--[\\s\\S]*?-->/)\n  .replace('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  .replace('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/)\n  .replace(/tag/g, block._tag)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', '<' + block._tag)\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      space,\n      i,\n      tag,\n      l,\n      isordered;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : ''\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase();\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex()\n\ninline._inside = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = edit(inline.link)\n  .replace('inside', inline._inside)\n  .replace('href', inline._href)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('inside', inline._inside)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href),\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer(),\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/marked/lib/marked.js","// YAML - Core - Copyright TJ Holowaychuk <tj@vision-media.ca> (MIT Licensed)\n\n/**\n * Version triplet.\n */\n\nexports.version = '0.2.3'\n\n// --- Helpers\n\n/**\n * Return 'near \"context\"' where context\n * is replaced by a chunk of _str_.\n *\n * @param  {string} str\n * @return {string}\n * @api public\n */\n\nfunction context(str) {\n  if (typeof str !== 'string') return ''\n  str = str\n    .slice(0, 25)\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\"/g, '\\\\\\\"')\n  return 'near \"' + str + '\"'\n}\n\n// --- Lexer\n\n/**\n * YAML grammar tokens.\n */\n\nvar tokens = [\n  ['comment', /^#[^\\n]*/],\n  ['indent', /^\\n( *)/],\n  ['space', /^ +/],\n  ['true', /^\\b(enabled|true|yes|on)\\b/],\n  ['false', /^\\b(disabled|false|no|off)\\b/],\n  ['null', /^\\b(null|Null|NULL|~)\\b/],\n  ['string', /^\"(.*?)\"/],\n  ['string', /^'(.*?)'/],\n  ['timestamp', /^((\\d{4})-(\\d\\d?)-(\\d\\d?)(?:(?:[ \\t]+)(\\d\\d?):(\\d\\d)(?::(\\d\\d))?)?)/],\n  ['float', /^(\\d+\\.\\d+)/],\n  ['int', /^(\\d+)/],\n  ['doc', /^---/],\n  [',', /^,/],\n  ['{', /^\\{(?![^\\n\\}]*\\}[^\\n]*[^\\s\\n\\}])/],\n  ['}', /^\\}/],\n  ['[', /^\\[(?![^\\n\\]]*\\][^\\n]*[^\\s\\n\\]])/],\n  [']', /^\\]/],\n  ['-', /^\\-/],\n  [':', /^[:]/],\n  ['string', /^(?![^:\\n\\s]*:[^\\/]{2})(([^:,\\]\\}\\n\\s]|(?!\\n)\\s(?!\\s*?\\n)|:\\/\\/|,(?=[^\\n]*\\s*[^\\]\\}\\s\\n]\\s*\\n)|[\\]\\}](?=[^\\n]*\\s*[^\\]\\}\\s\\n]\\s*\\n))*)(?=[,:\\]\\}\\s\\n]|$)/], \n  ['id', /^([\\w][\\w -]*)/]\n]\n\n/**\n * Tokenize the given _str_.\n *\n * @param  {string} str\n * @return {array}\n * @api private\n */\n\nexports.tokenize = function (str) {\n  var token, captures, ignore, input,\n      indents = 0, lastIndents = 0,\n      stack = [], indentAmount = -1\n\n  // Windows new line support (CR+LF, \\r\\n)\n  str = str.replace(/\\r\\n/g, \"\\n\");\n\n  while (str.length) {\n    for (var i = 0, len = tokens.length; i < len; ++i)\n      if (captures = tokens[i][1].exec(str)) {\n        token = [tokens[i][0], captures],\n        str = str.replace(tokens[i][1], '')\n        switch (token[0]) {\n          case 'comment':\n            ignore = true\n            break\n          case 'indent':\n            lastIndents = indents \n            // determine the indentation amount from the first indent\n            if (indentAmount == -1) {\n              indentAmount = token[1][1].length\n            }\n\n            indents = token[1][1].length / indentAmount\n            if (indents === lastIndents)\n              ignore = true\n            else if (indents > lastIndents + 1)\n              throw new SyntaxError('invalid indentation, got ' + indents + ' instead of ' + (lastIndents + 1))\n            else if (indents < lastIndents) {\n              input = token[1].input\n              token = ['dedent']\n              token.input = input\n              while (--lastIndents > indents)\n                stack.push(token)\n            }\n        }\n        break\n      }\n    if (!ignore)\n      if (token)\n        stack.push(token),\n        token = null\n      else \n        throw new SyntaxError(context(str))\n    ignore = false\n  }\n  return stack\n}\n\n// --- Parser\n\n/**\n * Initialize with _tokens_.\n */\n\nfunction Parser(tokens) {\n  this.tokens = tokens\n}\n\n/**\n * Look-ahead a single token.\n *\n * @return {array}\n * @api public\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[0]\n}\n\n/**\n * Advance by a single token.\n *\n * @return {array}\n * @api public\n */\n\nParser.prototype.advance = function() {\n  return this.tokens.shift()\n}\n\n/**\n * Advance and return the token's value.\n *\n * @return {mixed}\n * @api private\n */\n\nParser.prototype.advanceValue = function() {\n  return this.advance()[1][1]\n}\n\n/**\n * Accept _type_ and advance or do nothing.\n *\n * @param  {string} type\n * @return {bool}\n * @api private\n */\n\nParser.prototype.accept = function(type) {\n  if (this.peekType(type))\n    return this.advance()\n}\n\n/**\n * Expect _type_ or throw an error _msg_.\n *\n * @param  {string} type\n * @param  {string} msg\n * @api private\n */\n\nParser.prototype.expect = function(type, msg) {\n  if (this.accept(type)) return\n  throw new Error(msg + ', ' + context(this.peek()[1].input))\n}\n\n/**\n * Return the next token type.\n *\n * @return {string}\n * @api private\n */\n\nParser.prototype.peekType = function(val) {\n  return this.tokens[0] &&\n         this.tokens[0][0] === val\n}\n\n/**\n * space*\n */\n\nParser.prototype.ignoreSpace = function() {\n  while (this.peekType('space'))\n    this.advance()\n}\n\n/**\n * (space | indent | dedent)*\n */\n\nParser.prototype.ignoreWhitespace = function() {\n  while (this.peekType('space') ||\n         this.peekType('indent') ||\n         this.peekType('dedent'))\n    this.advance()\n}\n\n/**\n *   block\n * | doc\n * | list\n * | inlineList\n * | hash\n * | inlineHash\n * | string\n * | float\n * | int\n * | true\n * | false\n * | null\n */\n\nParser.prototype.parse = function() {\n  switch (this.peek()[0]) {\n    case 'doc':\n      return this.parseDoc()\n    case '-':\n      return this.parseList()\n    case '{':\n      return this.parseInlineHash()\n    case '[':\n      return this.parseInlineList()\n    case 'id':\n      return this.parseHash()\n    case 'string':\n      return this.advanceValue()\n    case 'timestamp':\n      return this.parseTimestamp()\n    case 'float':\n      return parseFloat(this.advanceValue())\n    case 'int':\n      return parseInt(this.advanceValue())\n    case 'true':\n      this.advanceValue(); return true\n    case 'false':\n      this.advanceValue(); return false\n    case 'null':\n      this.advanceValue(); return null\n  }\n}\n\n/**\n * '---'? indent expr dedent\n */\n\nParser.prototype.parseDoc = function() {\n  this.accept('doc')\n  this.expect('indent', 'expected indent after document')\n  var val = this.parse()\n  this.expect('dedent', 'document not properly dedented')\n  return val\n}\n\n/**\n *  ( id ':' - expr -\n *  | id ':' - indent expr dedent\n *  )+\n */\n\nParser.prototype.parseHash = function() {\n  var id, hash = {}\n  while (this.peekType('id') && (id = this.advanceValue())) {\n    this.expect(':', 'expected semi-colon after id')\n    this.ignoreSpace()\n    if (this.accept('indent'))\n      hash[id] = this.parse(),\n      this.expect('dedent', 'hash not properly dedented')\n    else\n      hash[id] = this.parse()\n    this.ignoreSpace()\n  }\n  return hash\n}\n\n/**\n * '{' (- ','? ws id ':' - expr ws)* '}'\n */\n\nParser.prototype.parseInlineHash = function() {\n  var hash = {}, id, i = 0\n  this.accept('{')\n  while (!this.accept('}')) {\n    this.ignoreSpace()\n    if (i) this.expect(',', 'expected comma')\n    this.ignoreWhitespace()\n    if (this.peekType('id') && (id = this.advanceValue())) {\n      this.expect(':', 'expected semi-colon after id')\n      this.ignoreSpace()\n      hash[id] = this.parse()\n      this.ignoreWhitespace()\n    }\n    ++i\n  }\n  return hash\n}\n\n/**\n *  ( '-' - expr -\n *  | '-' - indent expr dedent\n *  )+\n */\n\nParser.prototype.parseList = function() {\n  var list = []\n  while (this.accept('-')) {\n    this.ignoreSpace()\n    if (this.accept('indent'))\n      list.push(this.parse()),\n      this.expect('dedent', 'list item not properly dedented')\n    else\n      list.push(this.parse())\n    this.ignoreSpace()\n  }\n  return list\n}\n\n/**\n * '[' (- ','? - expr -)* ']'\n */\n\nParser.prototype.parseInlineList = function() {\n  var list = [], i = 0\n  this.accept('[')\n  while (!this.accept(']')) {\n    this.ignoreSpace()\n    if (i) this.expect(',', 'expected comma')\n    this.ignoreSpace()\n    list.push(this.parse())\n    this.ignoreSpace()\n    ++i\n  }\n  return list\n}\n\n/**\n * yyyy-mm-dd hh:mm:ss\n *\n * For full format: http://yaml.org/type/timestamp.html\n */\n\nParser.prototype.parseTimestamp = function() {\n  var token = this.advance()[1]\n  var date = new Date\n  var year = token[2]\n    , month = token[3]\n    , day = token[4]\n    , hour = token[5] || 0 \n    , min = token[6] || 0\n    , sec = token[7] || 0\n\n  date.setUTCFullYear(year, month-1, day)\n  date.setUTCHours(hour)\n  date.setUTCMinutes(min)\n  date.setUTCSeconds(sec)\n  date.setUTCMilliseconds(0)\n  return date\n}\n\n/**\n * Evaluate a _str_ of yaml.\n *\n * @param  {string} str\n * @return {mixed}\n * @api public\n */\n\nexports.eval = function(str) {\n  return (new Parser(exports.tokenize(str))).parse()\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/yaml/lib/yaml.js","/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function(factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window ||\n                     typeof self === 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if(typeof exports !== 'undefined') {\n    factory(exports);\n  } else if(globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if(typeof define === 'function' && define.amd) {\n      define([], function() {\n        return globalObject.hljs;\n      });\n    }\n  }\n\n}(function(hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys;\n\n  // Global internal variables used within the highlight.js library.\n  var languages = {},\n      aliases   = {};\n\n  // Regular expressions used throughout the highlight.js library.\n  var noHighlightRe    = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe      = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm;\n\n  var spanEndTag = '</span>';\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = languagePrefixRe.exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i]\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent) {  // inherit(parent, override_obj, override_obj, ...)\n    var key;\n    var result = {};\n    var objects = Array.prototype.slice.call(arguments, 1);\n\n    for (key in parent)\n      result[key] = parent[key];\n    objects.forEach(function(obj) {\n      for (key in obj)\n        result[key] = obj[key];\n    });\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset !== highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value).replace('\"', '&quot;') + '\"';}\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substring(processed, stream[0].offset));\n      processed = stream[0].offset;\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function expand_mode(mode) {\n    if (mode.variants && !mode.cached_variants) {\n      mode.cached_variants = mode.variants.map(function(variant) {\n        return inherit(mode, {variants: null}, variant);\n      });\n    }\n    return mode.cached_variants || (mode.endsWithParent && [inherit(mode)]) || [mode];\n  }\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function(kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') { // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      mode.contains = Array.prototype.concat.apply([], mode.contains.map(function(c) {\n        return expand_mode(c === 'self' ? mode : c)\n      }));\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators =\n        mode.contains.map(function(c) {\n          return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n        })\n        .concat([mode.terminator_end, mode.illegal])\n        .map(reStr)\n        .filter(Boolean);\n      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};\n    }\n\n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n\n  */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : spanEndTag\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n\n      if (!top.keywords)\n        return escape(mode_buffer);\n\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substring(last_index, match.index));\n        keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += (top.subLanguage != null ? processSubLanguage() : processKeywords());\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className? buildSpan(mode.className, '', true): '';\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n          if (!top.skip) {\n            relevance += top.relevance;\n          }\n          top = top.parent;\n        } while (top !== end_mode.parent);\n        if (end_mode.starts) {\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top))\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match)\n          break;\n        count = processLexeme(value.substring(index, match.index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).forEach(function(name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR)\n      ? value\n      : value.replace(fixMarkupRe, function(match, p1) {\n          if (options.useBR && match === '\\n') {\n            return '<br>';\n          } else if (options.tabReplace) {\n            return p1.replace(/\\t/g, options.tabReplace);\n          }\n          return '';\n      });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n\n    if (isNotHighlighted(language))\n        return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    originalStream = nodeStream(node);\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  return hljs;\n}));\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/highlight.js/lib/highlight.js","module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'and elif is global as in if from raise for except finally print import pass return ' +\n      'exec else break not with class assert yield try while continue del or def lambda ' +\n      'async await nonlocal|10 None True False',\n    built_in:\n      'Ellipsis NotImplemented'\n  };\n  var PROMPT = {\n    className: 'meta',  begin: /^(>>>|\\.\\.\\.) /\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: /\\{/, end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /(u|b)?r?'''/, end: /'''/,\n        contains: [PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(u|b)?r?\"\"\"/, end: /\"\"\"/,\n        contains: [PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(fr|rf|f)'''/, end: /'''/,\n        contains: [PROMPT, SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"\"\"/, end: /\"\"\"/,\n        contains: [PROMPT, SUBST]\n      },\n      {\n        begin: /(u|r|ur)'/, end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)\"/, end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /(b|br)'/, end: /'/\n      },\n      {\n        begin: /(b|br)\"/, end: /\"/\n      },\n      {\n        begin: /(fr|rf|f)'/, end: /'/,\n        contains: [SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"/, end: /\"/,\n        contains: [SUBST]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      {begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?'},\n      {begin: '\\\\b(0o[0-7]+)[lLjJ]?'},\n      {begin: hljs.C_NUMBER_RE + '[lLjJ]?'}\n    ]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    contains: ['self', PROMPT, NUMBER, STRING]\n  };\n  SUBST.contains = [STRING, NUMBER, PROMPT];\n  return {\n    aliases: ['py', 'gyp'],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      STRING,\n      hljs.HASH_COMMENT_MODE,\n      {\n        variants: [\n          {className: 'function', beginKeywords: 'def'},\n          {className: 'class', beginKeywords: 'class'}\n        ],\n        end: /:/,\n        illegal: /[${=;\\n,]/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          PARAMS,\n          {\n            begin: /->/, endsWithParent: true,\n            keywords: 'None'\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/, end: /$/\n      },\n      {\n        begin: /\\b(print|exec)\\(/ // don’t highlight keywords-turned-functions in Python 3\n      }\n    ]\n  };\n};\n\n\n// WEBPACK FOOTER //\n// ../node_modules/highlight.js/lib/languages/python.js","module.exports = function(hljs) {\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n      {begin: /\\$\\{(.*?)}/}\n    ]\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$\\(/, end: /\\)/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  var APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n\n  return {\n    aliases: ['sh', 'zsh'],\n    lexemes: /\\b-?[a-z\\._]+\\b/,\n    keywords: {\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp',\n      _:\n        '-ne -eq -lt -gt -f -d -e -s -l -a' // relevance booster\n    },\n    contains: [\n      {\n        className: 'meta',\n        begin: /^#![^\\n]+sh\\s*$/,\n        relevance: 10\n      },\n      {\n        className: 'function',\n        begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n        returnBegin: true,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE,\n      QUOTE_STRING,\n      APOS_STRING,\n      VAR\n    ]\n  };\n};\n\n\n// WEBPACK FOOTER //\n// ../node_modules/highlight.js/lib/languages/bash.js","module.exports = function(hljs) {\n  var keywords = {\n    'builtin-name':\n      // Clojure keywords\n      'def defonce cond apply if-not if-let if not not= = < > <= >= == + / * - rem '+\n      'quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? '+\n      'set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? '+\n      'class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? '+\n      'string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . '+\n      'inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last '+\n      'drop-while while intern condp case reduced cycle split-at split-with repeat replicate '+\n      'iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext '+\n      'nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends '+\n      'add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler '+\n      'set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter '+\n      'monitor-exit defmacro defn defn- macroexpand macroexpand-1 for dosync and or '+\n      'when when-not when-let comp juxt partial sequence memoize constantly complement identity assert '+\n      'peek pop doto proxy defstruct first rest cons defprotocol cast coll deftype defrecord last butlast '+\n      'sigs reify second ffirst fnext nfirst nnext defmulti defmethod meta with-meta ns in-ns create-ns import '+\n      'refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! '+\n      'assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger '+\n      'bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline '+\n      'flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking '+\n      'assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! '+\n      'reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! '+\n      'new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty '+\n      'hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list '+\n      'disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer '+\n      'chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate '+\n      'unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta '+\n      'lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize'\n   };\n\n  var SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  var SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n  var SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  var NUMBER = {\n    className: 'number', begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';',\n    '$',\n    {\n      relevance: 0\n    }\n  );\n  var LITERAL = {\n    className: 'literal',\n    begin: /\\b(true|false|nil)\\b/\n  };\n  var COLLECTION = {\n    begin: '[\\\\[\\\\{]', end: '[\\\\]\\\\}]'\n  };\n  var HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  var HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  var KEY = {\n    className: 'symbol',\n    begin: '[:]{1,2}' + SYMBOL_RE\n  };\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  var NAME = {\n    keywords: keywords,\n    lexemes: SYMBOL_RE,\n    className: 'name', begin: SYMBOL_RE,\n    starts: BODY\n  };\n  var DEFAULT_CONTAINS = [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL, SYMBOL];\n\n  LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n  HINT_COL.contains = [COLLECTION];\n\n  return {\n    aliases: ['clj'],\n    illegal: /\\S/,\n    contains: [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL]\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ../node_modules/highlight.js/lib/languages/clojure.js","module.exports = function(hljs) {\n  var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword:\n      'in of if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const export super debugger as async await static ' +\n      // ECMAScript 6 modules import\n      'import from as'\n    ,\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n      'Promise'\n  };\n  var EXPRESSIONS;\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)' },\n      { begin: '\\\\b(0[oO][0-7]+)' },\n      { begin: hljs.C_NUMBER_RE }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: []  // defined later\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ]\n  var PARAMS_CONTAINS = SUBST.contains.concat([\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n\n  return {\n    aliases: ['js', 'jsx'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      {\n        className: 'meta',\n        begin: /^#!/, end: /$/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBER,\n      { // object attr container\n        begin: /[{,]\\s*/, relevance: 0,\n        contains: [\n          {\n            begin: IDENT_RE + '\\\\s*:', returnBegin: true,\n            relevance: 0,\n            contains: [{className: 'attr', begin: IDENT_RE, relevance: 0}]\n          }\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // E4X / JSX\n            begin: /</, end: /(\\/\\w+|\\w+\\/)>/,\n            subLanguage: 'xml',\n            contains: [\n              {begin: /<\\w+\\s*\\/>/, skip: true},\n              {\n                begin: /<\\w+/, end: /(\\/\\w+|\\w+\\/)>/, skip: true,\n                contains: [\n                  {begin: /<\\w+\\s*\\/>/, skip: true},\n                  'self'\n                ]\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: PARAMS_CONTAINS\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      hljs.METHOD_GUARD,\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n};\n\n\n// WEBPACK FOOTER //\n// ../node_modules/highlight.js/lib/languages/javascript.js","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('preact')) :\n  typeof define === 'function' && define.amd ? define(['preact'], factory) :\n  (global.preactMarkup = factory(global.preact));\n}(this, function (preact) { 'use strict';\n\n  var parserDoc = void 0;\n\n  function parseMarkup(markup, type) {\n  \tvar doc = void 0,\n  \t    mime = type === 'html' ? 'text/html' : 'application/xml',\n  \t    parserError = void 0,\n  \t    wrappedMarkup = void 0,\n  \t    tag = void 0;\n\n  \tif (type === 'html') {\n  \t\ttag = 'body';\n  \t\twrappedMarkup = '<!DOCTYPE html>\\n<html><body>' + markup + '</body></html>';\n  \t} else {\n  \t\ttag = 'xml';\n  \t\twrappedMarkup = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>' + markup + '</xml>';\n  \t}\n\n  \ttry {\n  \t\tdoc = new DOMParser().parseFromString(wrappedMarkup, mime);\n  \t} catch (err) {\n  \t\tparserError = err;\n  \t}\n\n  \tif (!doc && type === 'html') {\n  \t\tdoc = parserDoc || (parserDoc = buildParserFrame());\n  \t\tdoc.open();\n  \t\tdoc.write(wrappedMarkup);\n  \t\tdoc.close();\n  \t}\n\n  \tif (!doc) return;\n\n  \tvar out = doc.getElementsByTagName(tag)[0],\n  \t    fc = out.firstChild;\n\n  \tif (markup && !fc) {\n  \t\tout.error = 'Document parse failed.';\n  \t}\n\n  \tif (fc && String(fc.nodeName).toLowerCase() === 'parsererror') {\n  \t\tfc.removeChild(fc.firstChild);\n  \t\tfc.removeChild(fc.lastChild);\n  \t\tout.error = fc.textContent || fc.nodeValue || parserError || 'Unknown error';\n\n  \t\tout.removeChild(fc);\n  \t}\n\n  \treturn out;\n  }\n\n  function buildParserFrame() {\n  \tif (document.implementation && document.implementation.createHTMLDocument) {\n  \t\treturn document.implementation.createHTMLDocument('');\n  \t}\n  \tvar frame = document.createElement('iframe');\n  \tframe.style.cssText = 'position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;';\n  \tframe.setAttribute('sandbox', 'allow-forms');\n  \tdocument.body.appendChild(frame);\n  \treturn frame.contentWindow.document;\n  }\n\n  var EMPTY_OBJ$1 = {};\n\n  function toVdom(node, visitor, h, options) {\n  \twalk.visitor = visitor;\n  \twalk.h = h;\n  \twalk.options = options || EMPTY_OBJ$1;\n  \treturn walk(node);\n  }\n\n  function walk(n, index, arr) {\n  \tif (n.nodeType === 3) {\n  \t\tvar text = 'textContent' in n ? n.textContent : n.nodeValue || '';\n\n  \t\tif (walk.options.trim !== false) {\n  \t\t\tvar isFirstOrLast = index === 0 || index === arr.length - 1;\n\n  \t\t\tif (text.match(/^[\\s\\n]+$/g) && walk.options.trim !== 'all') {\n  \t\t\t\ttext = ' ';\n  \t\t\t} else {\n  \t\t\t\ttext = text.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g, walk.options.trim === 'all' || isFirstOrLast ? '' : ' ');\n  \t\t\t}\n\n  \t\t\tif ((!text || text === ' ') && arr.length > 1 && isFirstOrLast) return null;\n  \t\t}\n  \t\treturn text;\n  \t}\n  \tif (n.nodeType !== 1) return null;\n  \tvar nodeName = String(n.nodeName).toLowerCase();\n\n  \tif (nodeName === 'script' && !walk.options.allowScripts) return null;\n\n  \tvar out = walk.h(nodeName, getProps(n.attributes), walkChildren(n.childNodes));\n  \tif (walk.visitor) walk.visitor(out);\n  \treturn out;\n  }\n\n  function getProps(attrs) {\n  \tvar len = attrs && attrs.length;\n  \tif (!len) return null;\n  \tvar props = {};\n  \tfor (var i = 0; i < len; i++) {\n  \t\tvar _attrs$i = attrs[i];\n  \t\tvar name = _attrs$i.name;\n  \t\tvar value = _attrs$i.value;\n\n  \t\tif (value === '') value = true;\n  \t\tif (name.substring(0, 2) === 'on' && walk.options.allowEvents) {\n  \t\t\tvalue = new Function(value);\n  \t\t}\n  \t\tprops[name] = value;\n  \t}\n  \treturn props;\n  }\n\n  function walkChildren(children) {\n  \tvar c = children && Array.prototype.map.call(children, walk).filter(exists);\n  \treturn c && c.length ? c : null;\n  }\n\n  var exists = function (x) {\n  \treturn x;\n  };\n\n  var EMPTY_OBJ = {};\n\n  function markupToVdom(markup, type, reviver, map, options) {\n  \tvar dom = parseMarkup(markup, type);\n\n  \tif (dom && dom.error) {\n  \t\tthrow new Error(dom.error);\n  \t}\n\n  \tvar body = dom && dom.body || dom;\n  \tvisitor.map = map || EMPTY_OBJ;\n  \tvar vdom = body && toVdom(body, visitor, reviver, options);\n  \tvisitor.map = null;\n\n  \treturn vdom && vdom.children || null;\n  }\n\n  function toCamelCase(name) {\n  \treturn name.replace(/-(.)/g, function (match, letter) {\n  \t\treturn letter.toUpperCase();\n  \t});\n  }\n\n  function visitor(node) {\n  \tvar name = node.nodeName.toLowerCase(),\n  \t    map = visitor.map;\n  \tif (map && map.hasOwnProperty(name)) {\n  \t\tnode.nodeName = map[name];\n  \t\tnode.attributes = Object.keys(node.attributes || {}).reduce(function (attrs, attrName) {\n  \t\t\tattrs[toCamelCase(attrName)] = node.attributes[attrName];\n  \t\t\treturn attrs;\n  \t\t}, {});\n  \t} else {\n  \t\tnode.nodeName = name.replace(/[^a-z0-9-]/i, '');\n  \t}\n  }\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var objectWithoutProperties = function (obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  };\n\n  var possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var customReviver = void 0;\n\n  var Markup = function (_Component) {\n  \tinherits(Markup, _Component);\n\n  \tfunction Markup() {\n  \t\tclassCallCheck(this, Markup);\n  \t\treturn possibleConstructorReturn(this, _Component.apply(this, arguments));\n  \t}\n\n  \tMarkup.setReviver = function setReviver(h) {\n  \t\tcustomReviver = h;\n  \t};\n\n  \tMarkup.prototype.shouldComponentUpdate = function shouldComponentUpdate(_ref) {\n  \t\tvar wrap = _ref.wrap;\n  \t\tvar type = _ref.type;\n  \t\tvar markup = _ref.markup;\n\n  \t\tvar p = this.props;\n  \t\treturn wrap !== p.wrap || type !== p.type || markup !== p.markup;\n  \t};\n\n  \tMarkup.prototype.setComponents = function setComponents(components) {\n  \t\tthis.map = {};\n  \t\tif (components) {\n  \t\t\tfor (var i in components) {\n  \t\t\t\tif (components.hasOwnProperty(i)) {\n  \t\t\t\t\tvar name = i.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g, '$1$3-$2$4').toLowerCase();\n  \t\t\t\t\tthis.map[name] = components[i];\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \tMarkup.prototype.render = function render(_ref2) {\n  \t\tvar _ref2$wrap = _ref2.wrap;\n  \t\tvar wrap = _ref2$wrap === undefined ? true : _ref2$wrap;\n  \t\tvar type = _ref2.type;\n  \t\tvar markup = _ref2.markup;\n  \t\tvar components = _ref2.components;\n  \t\tvar reviver = _ref2.reviver;\n  \t\tvar onError = _ref2.onError;\n  \t\tvar allowScripts = _ref2['allow-scripts'];\n  \t\tvar allowEvents = _ref2['allow-events'];\n  \t\tvar trim = _ref2.trim;\n  \t\tvar props = objectWithoutProperties(_ref2, ['wrap', 'type', 'markup', 'components', 'reviver', 'onError', 'allow-scripts', 'allow-events', 'trim']);\n\n  \t\tvar h = reviver || this.reviver || this.constructor.prototype.reviver || customReviver || preact.h,\n  \t\t    vdom = void 0;\n\n  \t\tthis.setComponents(components);\n\n  \t\tvar options = {\n  \t\t\tallowScripts: allowScripts,\n  \t\t\tallowEvents: allowEvents,\n  \t\t\ttrim: trim\n  \t\t};\n\n  \t\ttry {\n  \t\t\tvdom = markupToVdom(markup, type, h, this.map, options);\n  \t\t} catch (error) {\n  \t\t\tif (onError) {\n  \t\t\t\tonError({ error: error });\n  \t\t\t} else if (typeof console !== 'undefined' && console.error) {\n  \t\t\t\tconsole.error('preact-markup: ' + error);\n  \t\t\t}\n  \t\t}\n\n  \t\tif (wrap === false) return vdom && vdom[0] || null;\n\n  \t\tvar c = props.hasOwnProperty('className') ? 'className' : 'class',\n  \t\t    cl = props[c];\n  \t\tif (!cl) props[c] = 'markup';else if (cl.splice) cl.splice(0, 0, 'markup');else if (typeof cl === 'string') props[c] += ' markup';else if (typeof cl === 'object') cl.markup = true;\n\n  \t\treturn h('div', props, vdom || null);\n  \t};\n\n  \treturn Markup;\n  }(preact.Component);\n\n  return Markup;\n\n}));\n//# sourceMappingURL=preact-markup.js.map\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/preact-markup/dist/preact-markup.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/webpack/buildin/global.js","import { Component } from 'preact';\nimport yaml from 'yaml';\nimport Markdown from '../lib/markdown';\nimport config from '../config';\nimport loading from './loading.gif';\n\nimport hljs from 'highlight.js/lib/highlight';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport python from 'highlight.js/lib/languages/python';\nimport bash from 'highlight.js/lib/languages/bash';\nimport clojure from 'highlight.js/lib/languages/clojure';\nimport html from 'highlight.js/lib/languages/haml';\nimport 'highlight.js/styles/atom-one-dark.css';\n\nconst FRONT_MATTER_REG = /^\\s*---\\n\\s*([\\s\\S]*?)\\s*\\n---\\n/i;\nconst LANGUAGES = { javascript, python, bash, clojure, html };\nObject.keys(LANGUAGES).forEach(key => hljs.registerLanguage(key, LANGUAGES[key]));\n\nfunction parseContent(text) {\n\tlet [, frontMatter] = text.match(FRONT_MATTER_REG) || [],\n\t\tmeta = frontMatter && yaml.eval('---\\n' + frontMatter.replace(/^/gm, '  ') + '\\n') || {},\n\t\tcontent = text.replace(FRONT_MATTER_REG, '');\n\treturn { meta, content };\n}\n\nexport default class Article extends Component {\n\tcomponentDidMount() {\n\t\tlet name = this.props.match.params.name;\n\t\tlet article = config.articles.filter(item => item.name === name);\n\t\tarticle = article && article[0];\n\t\tlet urlPreix = process.env.NODE_ENV === 'production' ? config.post_url : 'http://localhost:8000/';\n\t\tfetch(`${urlPreix}${article.url}`)\n\t\t\t.then(r => r.text())\n\t\t\t.then(r => {\n\t\t\t\tthis.setState(parseContent(r));\n\t\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdocument.querySelectorAll('pre code').forEach(item => {\n\t\t\tlet lang = item.getAttribute('class').match(/lang-([a-z]+)/)[1],\n\t\t\t\thighlighted = hljs.highlightAuto(item.textContent);\n\t\t\titem.setAttribute('class', `hljs lang-${lang}`);\n\t\t\titem.innerHTML = highlighted.value;\n\t\t});\n\t}\n\n\trender({ }, { meta, content }) {\n\t\tlet _content = content ? <Markdown markdown={content} /> : <img src={loading} />;\n\t\treturn (\n\t\t\t<div class=\"page-content\">\n\t\t\t\t<div class=\"wrapper\">\n\t\t\t\t\t<div class=\"post\">\n\t\t\t\t\t\t<header class=\"post-header\">\n\t\t\t\t\t\t\t<h1 class=\"post-title\">{meta && meta.title}</h1>\n\t\t\t\t\t\t\t<p class=\"post-meta\">{meta && meta.date.toUTCString()}</p>\n\t\t\t\t\t\t</header>\n\n\t\t\t\t\t\t<article class=\"post-content\">{_content}</article>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./routes/article.js","import marked from 'marked';\nimport Markup from 'preact-markup';\n\n// Cache of markdown to generated html\nconst CACHE = {};\n\n// Marked options (See https://github.com/chjj/marked#options-1)\nconst OPTIONS = {\n\t// sanitize: true\n};\n\n// Convert Markdown to HTML using Marked\nconst markdownToHtml = md => (\n\tCACHE[md] || (CACHE[md] = marked(md, OPTIONS))\n);\n\n/** Component that renders Markdown to HTML via VDOM, using preact-markup.\n *\t@param props.markdown\tMarkdown string to render.\n *\t@returns VNode\n */\nexport default ({ markdown }) => {\n\tlet markup = markdownToHtml(markdown);\n\treturn (\n\t\t<Markup markup={markup} trim type=\"html\" />\n\t);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/markdown.js","module.exports = __webpack_public_path__ + \"d9493fac92bfdcf18a413a26861fb2fd.gif\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./routes/loading.gif\n// module id = zDR5\n// module chunks = 0","module.exports = // TODO support filter tags like :javascript, support inline HTML\nfunction(hljs) {\n  return {\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '^!!!( (5|1\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\b.*))?$',\n        relevance: 10\n      },\n      // FIXME these comments should be allowed to span indented lines\n      hljs.COMMENT(\n        '^\\\\s*(!=#|=#|-#|/).*$',\n        false,\n        {\n          relevance: 0\n        }\n      ),\n      {\n        begin: '^\\\\s*(-|=|!=)(?!#)',\n        starts: {\n          end: '\\\\n',\n          subLanguage: 'ruby'\n        }\n      },\n      {\n        className: 'tag',\n        begin: '^\\\\s*%',\n        contains: [\n          {\n            className: 'selector-tag',\n            begin: '\\\\w+'\n          },\n          {\n            className: 'selector-id',\n            begin: '#[\\\\w-]+'\n          },\n          {\n            className: 'selector-class',\n            begin: '\\\\.[\\\\w-]+'\n          },\n          {\n            begin: '{\\\\s*',\n            end: '\\\\s*}',\n            contains: [\n              {\n                begin: ':\\\\w+\\\\s*=>',\n                end: ',\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: ':\\\\w+'\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            begin: '\\\\(\\\\s*',\n            end: '\\\\s*\\\\)',\n            excludeEnd: true,\n            contains: [\n              {\n                begin: '\\\\w+\\\\s*=',\n                end: '\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: '\\\\w+',\n                    relevance: 0\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: '^\\\\s*[=~]\\\\s*'\n      },\n      {\n        begin: '#{',\n        starts: {\n          end: '}',\n          subLanguage: 'ruby'\n        }\n      }\n    ]\n  };\n};\n\n\n// WEBPACK FOOTER //\n// ../node_modules/highlight.js/lib/languages/haml.js"],"sourceRoot":""}